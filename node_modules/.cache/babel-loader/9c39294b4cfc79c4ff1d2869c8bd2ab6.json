{"ast":null,"code":"var _jsxFileName = \"/home/thanh/booking-sport/sportbook-admin/src/components/pages/post/component/EditPost.js\";\nimport React, { useState, Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PageTitle from \"../../../custom/PageTitle\";\nimport TextEditor from \"../../../custom/TextEditor\";\nimport Button from \"@material-ui/core/Button\";\nimport { Row } from \"reactstrap\";\nimport { Grid } from \"@material-ui/core\";\nimport DropdownV2 from \"../../../custom/DropdownV2\";\nimport { getPostById, updatePost } from \"../../../../store/actions/post\";\nimport { POST_STATUS_ARRAY } from \"../../../../utils/common\";\nimport PageLoader from \"../../../custom/PageLoader\";\nconst status = [{\n  id: 0,\n  name: \"Private\",\n  value: \"private\"\n}, {\n  id: 1,\n  name: \"Public\",\n  value: \"public\"\n}];\n\nconst EditPost = ({\n  selectedPost,\n  postId,\n  categories,\n  getPostById,\n  updatePost\n}) => {\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getPostById(setLoading, postId);\n    setBlogData({\n      title: selectedPost.title,\n      description: selectedPost.description\n    } || {});\n  }, [selectedPost.id]); // IF THERE IS PRE-DEFINED PAGE CONTENTS, INITIALIZE BLOG DATA WITH IT\n\n  const [blogData, setBlogData] = useState({\n    title: selectedPost.title,\n    description: selectedPost.description\n  } || {}); // DESTRUCTURE BLOG DATA\n\n  const {\n    description,\n    title\n  } = blogData || {};\n  const categoryArr = Object.keys(categories).map(key => categories[key]); // status: 0: private, 1: public\n\n  const [selectedDropdownData, setSelectedDropdownData] = useState({\n    selectedCategoryIndex: selectedPost && selectedPost.categoryId || \"\",\n    selectedStatusValue: selectedPost && selectedPost.status || \"\"\n  });\n  const {\n    selectedCategoryIndex,\n    selectedStatusValue\n  } = selectedDropdownData; // HANDLE CHANGE IN TEXT EDITOR\n\n  const onChangeEditor = textBody => {\n    setBlogData({ ...blogData,\n      description: textBody\n    }); // updateBlog(pageId, textBody);\n  }; // HANDLE PAGE TITLE INPUT\n\n\n  const onEntertitle = e => {\n    setBlogData({ ...blogData,\n      title: e.target.value\n    });\n  };\n\n  const onSelectCategory = selectedCategoryIndex => {\n    setSelectedDropdownData({ ...selectedDropdownData,\n      selectedCategoryIndex\n    });\n  };\n\n  const onSelectStatus = selectedStatusValue => {\n    setSelectedDropdownData({ ...selectedDropdownData,\n      selectedStatusValue\n    });\n  };\n\n  const handleOnSubmit = () => {\n    const postData = {\n      id: selectedPost.id,\n      title: blogData.title,\n      description: blogData.description,\n      status: selectedStatusValue,\n      categoryId: selectedCategoryIndex\n    };\n    updatePost(setLoading, postData);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageLoader, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    title: title,\n    onChange: onEntertitle,\n    center: \"true\",\n    editMode: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DropdownV2, {\n    fullWidth: true,\n    label: \"Category\",\n    value: selectedCategoryIndex.toString(),\n    options: categoryArr || [],\n    valueBasedOnProperty: \"id\",\n    displayProperty: \"name\",\n    onChange: categoryIndex => onSelectCategory(categoryIndex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DropdownV2, {\n    fullWidth: true,\n    label: \"Status\",\n    value: selectedStatusValue.toString(),\n    options: POST_STATUS_ARRAY || [],\n    valueBasedOnProperty: \"name\",\n    displayProperty: \"value\",\n    onChange: statusIndex => onSelectStatus(statusIndex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextEditor, {\n    className: \"blog editMode\",\n    value: description,\n    onChange: onChangeEditor,\n    placeholder: \"Enter body blog here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    style: {},\n    onClick: () => handleOnSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nconst mapStateToProps = state => ({\n  categories: state.category.categories,\n  selectedPost: state.post.selected_post //   preDefinedPageContents: state.edit_view_page.page_contents[0]\n\n});\n\nexport default connect(mapStateToProps, {\n  getPostById,\n  updatePost\n})(EditPost);","map":{"version":3,"sources":["/home/thanh/booking-sport/sportbook-admin/src/components/pages/post/component/EditPost.js"],"names":["React","useState","Fragment","useEffect","connect","PageTitle","TextEditor","Button","Row","Grid","DropdownV2","getPostById","updatePost","POST_STATUS_ARRAY","PageLoader","status","id","name","value","EditPost","selectedPost","postId","categories","loading","setLoading","setBlogData","title","description","blogData","categoryArr","Object","keys","map","key","selectedDropdownData","setSelectedDropdownData","selectedCategoryIndex","categoryId","selectedStatusValue","onChangeEditor","textBody","onEntertitle","e","target","onSelectCategory","onSelectStatus","handleOnSubmit","postData","toString","categoryIndex","statusIndex","mapStateToProps","state","category","post","selected_post"],"mappings":"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","sourcesContent":["import React, { useState, Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PageTitle from \"../../../custom/PageTitle\";\nimport TextEditor from \"../../../custom/TextEditor\";\nimport Button from \"@material-ui/core/Button\";\nimport { Row } from \"reactstrap\";\nimport { Grid } from \"@material-ui/core\";\nimport DropdownV2 from \"../../../custom/DropdownV2\";\nimport { getPostById, updatePost } from \"../../../../store/actions/post\";\nimport { POST_STATUS_ARRAY } from \"../../../../utils/common\";\nimport PageLoader from \"../../../custom/PageLoader\";\n\nconst status = [\n  { id: 0, name: \"Private\", value: \"private\" },\n  { id: 1, name: \"Public\", value: \"public\" },\n];\n\nconst EditPost = ({\n  selectedPost,\n  postId,\n  categories,\n  getPostById,\n  updatePost,\n}) => {\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getPostById(setLoading, postId);\n    setBlogData(\n      { title: selectedPost.title, description: selectedPost.description } || {}\n    );\n  }, [selectedPost.id]);\n\n  // IF THERE IS PRE-DEFINED PAGE CONTENTS, INITIALIZE BLOG DATA WITH IT\n  const [blogData, setBlogData] = useState(\n    { title: selectedPost.title, description: selectedPost.description } || {}\n  );\n  // DESTRUCTURE BLOG DATA\n  const { description, title } = blogData || {};\n\n  const categoryArr = Object.keys(categories).map((key) => categories[key]);\n\n  // status: 0: private, 1: public\n  const [selectedDropdownData, setSelectedDropdownData] = useState({\n    selectedCategoryIndex: (selectedPost && selectedPost.categoryId) || \"\",\n    selectedStatusValue: (selectedPost && selectedPost.status) || \"\",\n  });\n\n  const { selectedCategoryIndex, selectedStatusValue } = selectedDropdownData;\n\n  // HANDLE CHANGE IN TEXT EDITOR\n  const onChangeEditor = (textBody) => {\n    setBlogData({\n      ...blogData,\n      description: textBody,\n    });\n    // updateBlog(pageId, textBody);\n  };\n\n  // HANDLE PAGE TITLE INPUT\n  const onEntertitle = (e) => {\n    setBlogData({\n      ...blogData,\n      title: e.target.value,\n    });\n  };\n\n  const onSelectCategory = (selectedCategoryIndex) => {\n    setSelectedDropdownData({\n      ...selectedDropdownData,\n      selectedCategoryIndex,\n    });\n  };\n\n  const onSelectStatus = (selectedStatusValue) => {\n    setSelectedDropdownData({\n      ...selectedDropdownData,\n      selectedStatusValue,\n    });\n  };\n\n  const handleOnSubmit = () => {\n    const postData = {\n      id: selectedPost.id,\n      title: blogData.title,\n      description: blogData.description,\n      status: selectedStatusValue,\n      categoryId: selectedCategoryIndex,\n    };\n    updatePost(setLoading, postData);\n  };\n\n  return (\n    <Fragment>\n      <PageLoader loading={loading}>\n        <PageTitle\n          title={title}\n          onChange={onEntertitle}\n          center=\"true\"\n          editMode=\"true\"\n        />\n        <Grid container justify=\"flex-end\">\n          <Grid item xs={4}>\n            <DropdownV2\n              fullWidth\n              label=\"Category\"\n              value={selectedCategoryIndex.toString()}\n              options={categoryArr || []}\n              valueBasedOnProperty=\"id\"\n              displayProperty=\"name\"\n              onChange={(categoryIndex) => onSelectCategory(categoryIndex)}\n            />\n          </Grid>\n        </Grid>\n        <Grid container justify=\"flex-end\">\n          <Grid item xs={2} className=\"mt-2\">\n            <DropdownV2\n              fullWidth\n              label=\"Status\"\n              value={selectedStatusValue.toString()}\n              options={POST_STATUS_ARRAY || []}\n              valueBasedOnProperty=\"name\"\n              displayProperty=\"value\"\n              onChange={(statusIndex) => onSelectStatus(statusIndex)}\n            />\n          </Grid>\n        </Grid>\n\n        <hr className=\"mb-0\" />\n        <TextEditor\n          className=\"blog editMode\"\n          value={description}\n          onChange={onChangeEditor}\n          placeholder=\"Enter body blog here\"\n        />\n        <Grid container justify=\"center\" className=\"mt-4\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{}}\n            onClick={() => handleOnSubmit()}\n          >\n            Submit\n          </Button>\n        </Grid>\n      </PageLoader>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  categories: state.category.categories,\n  selectedPost: state.post.selected_post,\n  //   preDefinedPageContents: state.edit_view_page.page_contents[0]\n});\nexport default connect(mapStateToProps, { getPostById, updatePost })(EditPost);\n"]},"metadata":{},"sourceType":"module"}