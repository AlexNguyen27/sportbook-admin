{"ast":null,"code":"var _jsxFileName = \"/home/thanh/booking-sport/sportbook-admin/src/components/pages/user/component/ChangePasswordModal.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { Row, Col, Modal, ModalHeader, ModalBody, ModalFooter, Form } from \"reactstrap\";\nimport Button from \"@material-ui/core/Button\";\nimport TextFieldInputWithHeader from \"../../../custom/TextFieldInputWithheader\";\nimport { GET_ERRORS } from \"../../../../store/actions/types\";\nimport { clearErrors } from \"../../../../store/actions/common\";\nimport { updatePassword } from \"../../../../store/actions/user\";\nimport PageLoader from \"../../../custom/PageLoader\";\n\nconst ChangePasswordModal = ({\n  auth: {\n    user\n  },\n  updatePassword,\n  clearErrors,\n  errors,\n  modal,\n  setModal\n}) => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false); // PASSWORD STATE\n\n  const [password, setPassword] = useState({\n    newPassword: \"\",\n    confirmPassword: \"\",\n    currentPassword: \"\"\n  });\n  const {\n    newPassword,\n    confirmPassword,\n    currentPassword\n  } = password; // Save on change input value\n\n  const onChange = e => {\n    setPassword({ ...password,\n      [e.target.name]: e.target.value\n    });\n  }; // CLOSE MODAL ACTION\n\n\n  const closeModal = () => {\n    setModal(false);\n    clearErrors();\n    setPassword({\n      newPassword: \"\",\n      confirmPassword: \"\",\n      currentPassword: \"\"\n    });\n  }; // HANDLE ON SUBMIT FROM ADD NEW GROUP\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const error = {};\n    Object.keys(password).map(key => {\n      if (password[key].trim() === \"\") {\n        error[key] = \"This field is required\";\n      }\n    });\n\n    if (newPassword.trim() !== confirmPassword.trim()) {\n      error.confirmPassword = \"Confirm password did not match!!\";\n    }\n\n    if (newPassword.trim().length < 6 || newPassword.trim().length > 42) {\n      error.newPassword = 'Password must be more than 6 and 42 characters';\n    }\n\n    dispatch({\n      type: GET_ERRORS,\n      errors: error\n    });\n\n    if (JSON.stringify(error) === \"{}\") {\n      setLoading(true);\n      const {\n        currentPassword,\n        newPassword,\n        confirmPassword\n      } = password;\n      updatePassword(setLoading, currentPassword, newPassword, confirmPassword);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: () => closeModal(),\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageLoader, {\n    loading: loading,\n    noPadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: () => closeModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Change my password\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextFieldInputWithHeader, {\n    id: \"outlined-multiline-flexible\",\n    name: \"currentPassword\",\n    label: \"Current password\",\n    fullWidth: true,\n    type: \"password\",\n    value: currentPassword,\n    onChange: onChange,\n    error: errors.currentPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: \"12\",\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextFieldInputWithHeader, {\n    id: \"outlined-multiline-static\",\n    label: \"New Password\",\n    name: \"newPassword\",\n    type: \"password\",\n    value: newPassword,\n    fullWidth: true,\n    onChange: onChange,\n    error: errors.newPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: \"12\",\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextFieldInputWithHeader, {\n    id: \"outlined-multiline-static\",\n    label: \"Confirm password\",\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    fullWidth: true,\n    onChange: onChange,\n    error: errors.confirmPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    className: \"ml-2\",\n    onClick: () => closeModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, \"Cancel\")))));\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  clearErrors,\n  updatePassword\n})(ChangePasswordModal);","map":{"version":3,"sources":["/home/thanh/booking-sport/sportbook-admin/src/components/pages/user/component/ChangePasswordModal.js"],"names":["React","useState","useEffect","connect","useDispatch","Row","Col","Modal","ModalHeader","ModalBody","ModalFooter","Form","Button","TextFieldInputWithHeader","GET_ERRORS","clearErrors","updatePassword","PageLoader","ChangePasswordModal","auth","user","errors","modal","setModal","dispatch","loading","setLoading","password","setPassword","newPassword","confirmPassword","currentPassword","onChange","e","target","name","value","closeModal","onSubmit","preventDefault","error","Object","keys","map","key","trim","length","type","JSON","stringify","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n} from \"reactstrap\";\nimport Button from \"@material-ui/core/Button\";\nimport TextFieldInputWithHeader from \"../../../custom/TextFieldInputWithheader\";\nimport { GET_ERRORS } from \"../../../../store/actions/types\";\nimport { clearErrors } from \"../../../../store/actions/common\";\nimport { updatePassword } from \"../../../../store/actions/user\";\nimport PageLoader from \"../../../custom/PageLoader\";\n\nconst ChangePasswordModal = ({\n  auth: { user },\n  updatePassword,\n  clearErrors,\n  errors,\n  modal,\n  setModal,\n}) => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  // PASSWORD STATE\n  const [password, setPassword] = useState({\n    newPassword: \"\",\n    confirmPassword: \"\",\n    currentPassword: \"\",\n  });\n  const { newPassword, confirmPassword, currentPassword } = password;\n\n  // Save on change input value\n  const onChange = (e) => {\n    setPassword({\n      ...password,\n      [e.target.name]: e.target.value,\n    });\n  };\n  // CLOSE MODAL ACTION\n  const closeModal = () => {\n    setModal(false);\n    clearErrors();\n    setPassword({\n      newPassword: \"\",\n      confirmPassword: \"\",\n      currentPassword: \"\",\n    });\n  };\n\n  // HANDLE ON SUBMIT FROM ADD NEW GROUP\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const error = {};\n\n    Object.keys(password).map((key) => {\n      if (password[key].trim() === \"\") {\n        error[key] = \"This field is required\";\n      }\n    });\n\n    if (newPassword.trim() !== confirmPassword.trim()) {\n      error.confirmPassword = \"Confirm password did not match!!\";\n    }\n    if (newPassword.trim().length < 6 || newPassword.trim().length > 42) {\n      error.newPassword = 'Password must be more than 6 and 42 characters';\n    }\n\n    dispatch({\n      type: GET_ERRORS,\n      errors: error,\n    });\n\n    if (JSON.stringify(error) === \"{}\") {\n      setLoading(true);\n      const { currentPassword, newPassword, confirmPassword } = password;\n      updatePassword(setLoading, currentPassword, newPassword, confirmPassword);\n    }\n  };\n\n  return (\n    <Modal isOpen={modal} toggle={() => closeModal()} centered={true}>\n      <PageLoader loading={loading} noPadding>\n        <ModalHeader toggle={() => closeModal()}>\n          Change my password\n        </ModalHeader>\n\n        {/** MODAL BODY */}\n        <Form onSubmit={(e) => onSubmit(e)}>\n          <ModalBody>\n            <Row>\n              <Col xs=\"12\">\n                <TextFieldInputWithHeader\n                  id=\"outlined-multiline-flexible\"\n                  name=\"currentPassword\"\n                  label=\"Current password\"\n                  fullWidth\n                  type=\"password\"\n                  value={currentPassword}\n                  onChange={onChange}\n                  error={errors.currentPassword}\n                />\n              </Col>\n              <Col xs=\"12\" className=\"mt-4\">\n                <TextFieldInputWithHeader\n                  id=\"outlined-multiline-static\"\n                  label=\"New Password\"\n                  name=\"newPassword\"\n                  type=\"password\"\n                  value={newPassword}\n                  fullWidth\n                  onChange={onChange}\n                  error={errors.newPassword}\n                />\n              </Col>\n              <Col xs=\"12\" className=\"mt-4\">\n                <TextFieldInputWithHeader\n                  id=\"outlined-multiline-static\"\n                  label=\"Confirm password\"\n                  type=\"password\"\n                  name=\"confirmPassword\"\n                  value={confirmPassword}\n                  fullWidth\n                  onChange={onChange}\n                  error={errors.confirmPassword}\n                />\n              </Col>\n            </Row>\n          </ModalBody>\n\n          {/** MODAL FOOTER */}\n          <ModalFooter>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Save\n            </Button>\n            <Button\n              variant=\"contained\"\n              className=\"ml-2\"\n              onClick={() => closeModal()}\n            >\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Form>\n      </PageLoader>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { clearErrors, updatePassword })(\n  ChangePasswordModal\n);\n"]},"metadata":{},"sourceType":"module"}