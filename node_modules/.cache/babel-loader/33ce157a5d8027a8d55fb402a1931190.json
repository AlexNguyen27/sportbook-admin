{"ast":null,"code":"var _jsxFileName = \"/home/thanh/booking-sport/sportbook-admin/src/components/pages/statistics/user/StatisticsPost.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport MultipleSummary from \"../MultipleSummary\";\n\nconst StatisticsPost = ({\n  users,\n  userId,\n  role,\n  userProfile\n}) => {\n  const postName = userProfile && (role === \"user\" ? userProfile.posts : users[userId].posts).map(post => post.title);\n  const postReactionLike = userProfile && (role === \"user\" ? userProfile.posts : users[userId].posts).map(post => post.reactions.length);\n  let postViews = userProfile && (role === \"user\" ? userProfile.posts : users[userId].posts).map(post => post.view);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Statistics Likes\"), /*#__PURE__*/React.createElement(MultipleSummary, {\n    name: postName,\n    like: postReactionLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Statistics Views\"), /*#__PURE__*/React.createElement(MultipleSummary, {\n    name: postName,\n    view: postViews.slice(0, postName.length),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  users: state.user.users,\n  role: state.auth.user.role,\n  userProfile: state.user_profile.user_profile\n});\n\nexport default connect(mapStateToProps, null)(StatisticsPost);","map":{"version":3,"sources":["/home/thanh/booking-sport/sportbook-admin/src/components/pages/statistics/user/StatisticsPost.js"],"names":["React","connect","MultipleSummary","StatisticsPost","users","userId","role","userProfile","postName","posts","map","post","title","postReactionLike","reactions","length","postViews","view","slice","mapStateToProps","state","user","auth","user_profile"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,MAAT;AAAiBC,EAAAA,IAAjB;AAAuBC,EAAAA;AAAvB,CAAD,KAA0C;AAC/D,QAAMC,QAAQ,GACZD,WAAW,IACX,CAACD,IAAI,KAAK,MAAT,GAAkBC,WAAW,CAACE,KAA9B,GAAsCL,KAAK,CAACC,MAAD,CAAL,CAAcI,KAArD,EAA4DC,GAA5D,CACGC,IAAD,IAAUA,IAAI,CAACC,KADjB,CAFF;AAKA,QAAMC,gBAAgB,GACpBN,WAAW,IACX,CAACD,IAAI,KAAK,MAAT,GAAkBC,WAAW,CAACE,KAA9B,GAAsCL,KAAK,CAACC,MAAD,CAAL,CAAcI,KAArD,EAA4DC,GAA5D,CACGC,IAAD,IAAUA,IAAI,CAACG,SAAL,CAAeC,MAD3B,CAFF;AAMA,MAAIC,SAAS,GACXT,WAAW,IACX,CAACD,IAAI,KAAK,MAAT,GAAkBC,WAAW,CAACE,KAA9B,GAAsCL,KAAK,CAACC,MAAD,CAAL,CAAcI,KAArD,EAA4DC,GAA5D,CACGC,IAAD,IAAUA,IAAI,CAACM,IADjB,CAFF;AAMA,sBACE,uDACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAET,QAAvB;AAAiC,IAAA,IAAI,EAAEK,gBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE,oBAAC,eAAD;AACE,IAAA,IAAI,EAAEL,QADR;AAEE,IAAA,IAAI,EAAEQ,SAAS,CAACE,KAAV,CAAgB,CAAhB,EAAmBV,QAAQ,CAACO,MAA5B,CAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAWD,CA7BD;;AA+BA,MAAMI,eAAe,GAAIC,KAAD,KAAY;AAClChB,EAAAA,KAAK,EAAEgB,KAAK,CAACC,IAAN,CAAWjB,KADgB;AAElCE,EAAAA,IAAI,EAAEc,KAAK,CAACE,IAAN,CAAWD,IAAX,CAAgBf,IAFY;AAGlCC,EAAAA,WAAW,EAAEa,KAAK,CAACG,YAAN,CAAmBA;AAHE,CAAZ,CAAxB;;AAKA,eAAetB,OAAO,CAACkB,eAAD,EAAkB,IAAlB,CAAP,CAA+BhB,cAA/B,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport MultipleSummary from \"../MultipleSummary\";\n\nconst StatisticsPost = ({ users, userId, role, userProfile }) => {\n  const postName =\n    userProfile &&\n    (role === \"user\" ? userProfile.posts : users[userId].posts).map(\n      (post) => post.title\n    );\n  const postReactionLike =\n    userProfile &&\n    (role === \"user\" ? userProfile.posts : users[userId].posts).map(\n      (post) => post.reactions.length\n    );\n\n  let postViews =\n    userProfile &&\n    (role === \"user\" ? userProfile.posts : users[userId].posts).map(\n      (post) => post.view\n    );\n\n  return (\n    <>\n      <h4 className=\"mt-4\">Statistics Likes</h4>\n      <MultipleSummary name={postName} like={postReactionLike} />\n      <h4 className=\"mt-4\">Statistics Views</h4>\n      <MultipleSummary\n        name={postName}\n        view={postViews.slice(0, postName.length)}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  users: state.user.users,\n  role: state.auth.user.role,\n  userProfile: state.user_profile.user_profile,\n});\nexport default connect(mapStateToProps, null)(StatisticsPost);\n"]},"metadata":{},"sourceType":"module"}