{"ast":null,"code":"var _jsxFileName = \"/home/thanh/booking-sport/sportbook-admin/src/components/pages/newsFeed/component/PopularArticles.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport moment from \"moment\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport { getPopularPost } from \"../../../../utils/commonFunction\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    padding: 0,\n    backgroundColor: theme.palette.background.paper\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    maxWidth: 500\n  },\n  image: {\n    width: 128,\n    height: \"100%\"\n  },\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\"\n  },\n  header: {\n    marginLeft: \"12px\",\n    marginTop: \"30px\",\n    marginBottom: \"5px\"\n  },\n  item: {\n    // border: \"1px solid #e3e3e3\",\n    boxShadow: \"0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)\"\n  }\n}));\n\nconst PopularArticles = ({\n  posts\n}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const popularPosts = getPopularPost(posts, 7);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    className: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Popular Articles\"), /*#__PURE__*/React.createElement(List, {\n    component: \"nav\",\n    className: classes.root,\n    \"aria-label\": \"mailbox folders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, posts && popularPosts.map(item => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    className: classes.item,\n    onClick: () => history.push(`/view-post/${item.id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    sm: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, item.title), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(EventIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }), moment(item.createdAt).format(\"MMM Do YYYY\"))), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(PersonIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 27\n    }\n  }), item.user.firstName || item.user.lastName ? item.user.firstName + \" \" + item.user.lastName : item.user.username)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    style: {\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, item.reactions.length, \" \", item.reactions.length > 1 ? `Likes` : `Like`)))))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  })))));\n};\n\nconst mapStateToProps = state => ({\n  categories: state.category.categories,\n  posts: state.post.posts\n});\n\nexport default connect(mapStateToProps, {})(PopularArticles);","map":{"version":3,"sources":["/home/thanh/booking-sport/sportbook-admin/src/components/pages/newsFeed/component/PopularArticles.js"],"names":["React","makeStyles","useHistory","List","ListItem","ListItemText","Divider","Grid","connect","Typography","ButtonBase","EventIcon","moment","PersonIcon","getPopularPost","useStyles","theme","root","width","maxWidth","padding","backgroundColor","palette","background","paper","spacing","margin","image","height","img","display","maxHeight","header","marginLeft","marginTop","marginBottom","item","boxShadow","PopularArticles","posts","classes","history","popularPosts","map","push","id","title","createdAt","format","user","firstName","lastName","username","cursor","reactions","length","mapStateToProps","state","categories","category","post"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport moment from \"moment\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport { getPopularPost } from \"../../../../utils/commonFunction\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    padding: 0,\n    backgroundColor: theme.palette.background.paper,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    maxWidth: 500,\n  },\n  image: {\n    width: 128,\n    height: \"100%\",\n  },\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n  },\n  header: {\n    marginLeft: \"12px\",\n    marginTop: \"30px\",\n    marginBottom: \"5px\",\n  },\n  item: {\n    // border: \"1px solid #e3e3e3\",\n    boxShadow:\n      \"0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)\",\n  },\n}));\nconst PopularArticles = ({ posts }) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const popularPosts = getPopularPost(posts, 7);\n  return (\n    <>\n      <Typography variant=\"h5\" gutterBottom className={classes.header}>\n        Popular Articles\n      </Typography>\n\n      <List\n        component=\"nav\"\n        className={classes.root}\n        aria-label=\"mailbox folders\"\n      >\n        {posts &&\n          popularPosts.map((item) => (\n            <>\n              <ListItem\n                button\n                className={classes.item}\n                onClick={() => history.push(`/view-post/${item.id}`)}\n              >\n                <Grid container spacing={2}>\n                  <Grid item xs={3} sm container>\n                    <Grid item xs container direction=\"column\" spacing={2}>\n                      <Grid item xs>\n                        <Typography variant=\"body1\" gutterBottom>\n                          {item.title}\n                        </Typography>\n                        <div>\n                          <Typography variant=\"caption\" color=\"textSecondary\">\n                            <EventIcon />\n                            {moment(item.createdAt).format(\"MMM Do YYYY\")}\n                          </Typography>\n                        </div>\n                        <Typography variant=\"caption\" color=\"textSecondary\">\n                          <PersonIcon />\n                          {item.user.firstName || item.user.lastName\n                            ? item.user.firstName + \" \" + item.user.lastName\n                            : item.user.username}\n                        </Typography>\n                      </Grid>\n                      <Grid item>\n                        <Typography\n                          variant=\"caption\"\n                          style={{ cursor: \"pointer\" }}\n                        >\n                          {item.reactions.length}{\" \"}\n                          {item.reactions.length > 1 ? `Likes` : `Like`}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </ListItem>\n              <Divider />\n            </>\n          ))}\n      </List>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  categories: state.category.categories,\n  posts: state.post.posts,\n});\nexport default connect(mapStateToProps, {})(PopularArticles);\n"]},"metadata":{},"sourceType":"module"}