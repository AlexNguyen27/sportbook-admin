{"ast":null,"code":"import logoutDispatch from \"../../utils/logoutDispatch\";\nimport { GET_ERRORS, CLEAR_ERRORS, BASE_URL, GET_CATEGORIES, ADD_CATEGORY, DELETE_CATEGORY, EDIT_CATEGORY } from \"./types\";\nimport { hera } from \"hera-js\";\nimport { arrayToObject } from \"../../utils/commonFunction\";\nimport Swal from \"sweetalert2\"; //LOGIN User\n\nexport const getCategories = setLoading => async (dispatch, getState) => {\n  const {\n    token\n  } = getState().auth;\n  const {\n    data,\n    errors\n  } = await hera({\n    options: {\n      url: BASE_URL,\n      headers: {\n        token,\n        \"Content-Type\": \"application/json\"\n      }\n    },\n    query: `\n            query {\n                getCategories {\n                    id, \n                    name,\n                    status, \n                    createdAt,\n                    # posts {\n                    #   id\n                    # }\n                  }\n            }\n        `,\n    variables: {}\n  });\n\n  if (!errors) {\n    const categories = arrayToObject(data.getCategories);\n    dispatch({\n      type: GET_CATEGORIES,\n      categories\n    });\n    setLoading(false);\n  } else {\n    logoutDispatch(dispatch, errors);\n    dispatch({\n      type: GET_ERRORS,\n      errors: errors[0].message\n    });\n  }\n};\nexport const addCategory = (setLoading, name, status) => async (dispatch, getState) => {\n  const {\n    token\n  } = getState().auth;\n  const {\n    data,\n    errors\n  } = await hera({\n    options: {\n      url: BASE_URL,\n      headers: {\n        token,\n        \"Content-Type\": \"application/json\"\n      }\n    },\n    query: `\n      mutation {\n        createCategory(name: $name, status: $status) {\n          id, \n          name,\n          status,\n          createdAt\n        }\n      } \n    `,\n    variables: {\n      name,\n      status\n    }\n  });\n  console.log(data);\n\n  if (!errors) {\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    dispatch({\n      type: ADD_CATEGORY,\n      category: data.createCategory\n    });\n    setLoading(false);\n    Swal.fire({\n      position: \"center\",\n      type: \"success\",\n      title: \"Added successfully!\",\n      showConfirmButton: false,\n      timer: 1500\n    });\n  } else {\n    console.log(errors);\n    logoutDispatch(dispatch, errors);\n    Swal.fire({\n      position: \"center\",\n      type: \"Warning\",\n      title: \"Name must be unique\",\n      showConfirmButton: false,\n      timer: 1500\n    });\n    dispatch({\n      type: GET_ERRORS,\n      errors: errors[0].message\n    });\n  }\n};\nexport const deleteCatgory = (setLoading, id) => async (dispatch, getState) => {\n  console.log(\"-deleteCatgory----------\");\n  const {\n    token\n  } = getState().auth;\n  const {\n    data,\n    errors\n  } = await hera({\n    options: {\n      url: BASE_URL,\n      headers: {\n        token,\n        \"Content-Type\": \"application/json\"\n      }\n    },\n    query: `\n      mutation {\n        deleteCategory(id: $id) {\n          status,\n          message\n        }\n      } \n    `,\n    variables: {\n      id\n    }\n  });\n\n  if (!errors) {\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    dispatch({\n      type: DELETE_CATEGORY,\n      selectedId: id\n    });\n    Swal.fire({\n      position: \"center\",\n      type: \"success\",\n      title: \"Deleted successfully!\",\n      showConfirmButton: false,\n      timer: 1500\n    });\n    setLoading(false);\n  } else {\n    console.log(errors);\n    logoutDispatch(dispatch, errors);\n    Swal.fire({\n      position: \"center\",\n      type: \"Warning\",\n      title: \"Can't delete this category cuz it has posts!\",\n      showConfirmButton: false,\n      timer: 1500\n    });\n    dispatch({\n      type: GET_ERRORS,\n      errors: errors[0].message\n    });\n  }\n};\nexport const updateCategory = (setLoading, name, status, id) => async (dispatch, getState) => {\n  console.log(\"-deleteCatgory----------\");\n  const {\n    token\n  } = getState().auth;\n  const {\n    data,\n    errors\n  } = await hera({\n    options: {\n      url: BASE_URL,\n      headers: {\n        token,\n        \"Content-Type\": \"application/json\"\n      }\n    },\n    query: `\n      mutation {\n        updateCategory(id: $id, name: $name, status: $status) {\n          id\n          name\n          status\n          createdAt\n        }\n      } \n    `,\n    variables: {\n      id,\n      name,\n      status\n    }\n  });\n\n  if (!errors) {\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    dispatch({\n      type: EDIT_CATEGORY,\n      category: data.updateCategory\n    });\n    setLoading(false);\n    Swal.fire({\n      position: \"center\",\n      type: \"success\",\n      title: \"Your work has been save!\",\n      showConfirmButton: false,\n      timer: 1500\n    });\n    setLoading(false);\n  } else {\n    console.log(errors);\n    Swal.fire({\n      position: \"center\",\n      type: \"Warning\",\n      title: \"Please check the input!\",\n      showConfirmButton: false,\n      timer: 1500\n    });\n    logoutDispatch(dispatch, errors);\n    dispatch({\n      type: GET_ERRORS,\n      errors: errors[0].message\n    });\n  }\n};","map":{"version":3,"sources":["/home/thanh/booking-sport/sportbook-admin/src/store/actions/category.js"],"names":["logoutDispatch","GET_ERRORS","CLEAR_ERRORS","BASE_URL","GET_CATEGORIES","ADD_CATEGORY","DELETE_CATEGORY","EDIT_CATEGORY","hera","arrayToObject","Swal","getCategories","setLoading","dispatch","getState","token","auth","data","errors","options","url","headers","query","variables","categories","type","message","addCategory","name","status","console","log","category","createCategory","fire","position","title","showConfirmButton","timer","deleteCatgory","id","selectedId","updateCategory"],"mappings":"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","sourcesContent":["import logoutDispatch from \"../../utils/logoutDispatch\";\nimport {\n  GET_ERRORS,\n  CLEAR_ERRORS,\n  BASE_URL,\n  GET_CATEGORIES,\n  ADD_CATEGORY,\n  DELETE_CATEGORY,\n  EDIT_CATEGORY,\n} from \"./types\";\nimport { hera } from \"hera-js\";\nimport { arrayToObject } from \"../../utils/commonFunction\";\nimport Swal from \"sweetalert2\";\n\n//LOGIN User\nexport const getCategories = (setLoading) => async (dispatch, getState) => {\n  const { token } = getState().auth;\n\n  const { data, errors } = await hera({\n    options: {\n      url: BASE_URL,\n      headers: {\n        token,\n        \"Content-Type\": \"application/json\",\n      },\n    },\n    query: `\n            query {\n                getCategories {\n                    id, \n                    name,\n                    status, \n                    createdAt,\n                    # posts {\n                    #   id\n                    # }\n                  }\n            }\n        `,\n    variables: {},\n  });\n  if (!errors) {\n    const categories = arrayToObject(data.getCategories);\n\n    dispatch({\n      type: GET_CATEGORIES,\n      categories,\n    });\n    setLoading(false);\n  } else {\n    logoutDispatch(dispatch, errors);\n    dispatch({\n      type: GET_ERRORS,\n      errors: errors[0].message,\n    });\n  }\n};\n\nexport const addCategory = (setLoading, name, status) => async (dispatch, getState) => {\n  const { token } = getState().auth;\n\n  const { data, errors } = await hera({\n    options: {\n      url: BASE_URL,\n      headers: {\n        token,\n        \"Content-Type\": \"application/json\",\n      },\n    },\n    query: `\n      mutation {\n        createCategory(name: $name, status: $status) {\n          id, \n          name,\n          status,\n          createdAt\n        }\n      } \n    `,\n    variables: {\n      name,\n      status,\n    },\n  });\n\n  console.log(data);\n\n  if (!errors) {\n    dispatch({\n      type: CLEAR_ERRORS,\n    });\n\n    dispatch({\n      type: ADD_CATEGORY,\n      category: data.createCategory,\n    });\n    setLoading(false);\n    Swal.fire({\n      position: \"center\",\n      type: \"success\",\n      title: \"Added successfully!\",\n      showConfirmButton: false,\n      timer: 1500,\n    });\n  } else {\n    console.log(errors);\n    logoutDispatch(dispatch, errors);\n    Swal.fire({\n      position: \"center\",\n      type: \"Warning\",\n      title: \"Name must be unique\",\n      showConfirmButton: false,\n      timer: 1500,\n    });\n    dispatch({\n      type: GET_ERRORS,\n      errors: errors[0].message,\n    });\n  }\n};\n\nexport const deleteCatgory = (setLoading, id) => async (dispatch, getState) => {\n  console.log(\"-deleteCatgory----------\");\n  const { token } = getState().auth;\n  const { data, errors } = await hera({\n    options: {\n      url: BASE_URL,\n      headers: {\n        token,\n        \"Content-Type\": \"application/json\",\n      },\n    },\n    query: `\n      mutation {\n        deleteCategory(id: $id) {\n          status,\n          message\n        }\n      } \n    `,\n    variables: {\n      id,\n    },\n  });\n  if (!errors) {\n    dispatch({\n      type: CLEAR_ERRORS,\n    });\n\n    dispatch({\n      type: DELETE_CATEGORY,\n      selectedId: id,\n    });\n    Swal.fire({\n      position: \"center\",\n      type: \"success\",\n      title: \"Deleted successfully!\",\n      showConfirmButton: false,\n      timer: 1500,\n    });\n    setLoading(false);\n  } else {\n    console.log(errors);\n    logoutDispatch(dispatch, errors);\n    Swal.fire({\n      position: \"center\",\n      type: \"Warning\",\n      title: \"Can't delete this category cuz it has posts!\",\n      showConfirmButton: false,\n      timer: 1500,\n    });\n    dispatch({\n      type: GET_ERRORS,\n      errors: errors[0].message,\n    });\n  }\n};\n\nexport const updateCategory = (setLoading, name, status, id) => async (\n  dispatch,\n  getState\n) => {\n  console.log(\"-deleteCatgory----------\");\n  const { token } = getState().auth;\n  const { data, errors } = await hera({\n    options: {\n      url: BASE_URL,\n      headers: {\n        token,\n        \"Content-Type\": \"application/json\",\n      },\n    },\n    query: `\n      mutation {\n        updateCategory(id: $id, name: $name, status: $status) {\n          id\n          name\n          status\n          createdAt\n        }\n      } \n    `,\n    variables: {\n      id,\n      name,\n      status,\n    },\n  });\n  if (!errors) {\n    dispatch({\n      type: CLEAR_ERRORS,\n    });\n\n    dispatch({\n      type: EDIT_CATEGORY,\n      category: data.updateCategory,\n    });\n    setLoading(false);\n    Swal.fire({\n      position: \"center\",\n      type: \"success\",\n      title: \"Your work has been save!\",\n      showConfirmButton: false,\n      timer: 1500,\n    });\n    setLoading(false);\n  } else {\n    console.log(errors);\n    Swal.fire({\n      position: \"center\",\n      type: \"Warning\",\n      title: \"Please check the input!\",\n      showConfirmButton: false,\n      timer: 1500,\n    });\n    logoutDispatch(dispatch, errors);\n    dispatch({\n      type: GET_ERRORS,\n      errors: errors[0].message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}