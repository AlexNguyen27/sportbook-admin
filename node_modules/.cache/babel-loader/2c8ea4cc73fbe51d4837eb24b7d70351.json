{"ast":null,"code":"var _jsxFileName = \"/home/thanh/booking-sport/sportbook-admin/src/components/pages/newsFeed/NewsFeed.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\nimport PostCard from \"../../custom/PostCard\";\nimport SubNewsFeed from \"./component/SubNewsFeed\";\nimport { getPosts, getAllPublicPost } from \"../../../store/actions/post\";\nimport { getUsers } from \"../../../store/actions/user\";\nimport { getCategories } from \"../../../store/actions/category\";\nimport PageLoader from \"../../custom/PageLoader\";\nimport { getReactionTypes } from \"../../../store/actions/like\";\nimport { Typography, Button } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\",\n    margin: \"10px 0 0 0\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nconst NewsFeed = ({\n  selectedPost,\n  authProfile,\n  getReactionTypes,\n  role,\n  getCategories,\n  getAllPublicPost,\n  authUserId,\n  getUsers,\n  location,\n  posts\n}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [postsArr, setPostsArr] = useState(posts && Object.keys(posts).map(key => posts[key]));\n  const [noti, setNoti] = useState(\"NO POSTS, ADD SOME FRIENDS OR YOUR OWN POST :D\");\n  const [selectedCategoryId, setSelectedCategoryId] = useState(\"news\");\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getAllPublicPost(setLoading).then(() => {\n      setLoading(true);\n      getCategories(setLoading).then(() => {\n        setLoading(true);\n        getUsers(setLoading);\n        getReactionTypes(setLoading).then(() => {\n          onClickCategory(\"news\");\n        });\n      });\n    });\n  }, []);\n  useEffect(() => {\n    onClickCategory(\"news\");\n  }, [authProfile]);\n\n  const onClickCategory = categoryId => {\n    if (!authProfile) {\n      return;\n    }\n\n    setSelectedCategoryId(categoryId);\n\n    if (categoryId === \"all\") {\n      setPostsArr(posts && Object.keys(posts).map(key => posts[key]));\n      return;\n    }\n\n    if (categoryId === \"news\") {\n      let toUsers = authProfile.followed.length > 0 ? authProfile.followed.map(item => item.toUserId) : [];\n\n      if (toUsers) {\n        toUsers.push(authProfile.id);\n      }\n\n      const followedUserPosts = [];\n      Object.keys(posts).map(key => {\n        for (let i = 0; i < toUsers.length; i++) {\n          if (posts[key].userId === toUsers[i]) {\n            followedUserPosts.push(posts[key]);\n          }\n        }\n      });\n      setPostsArr(followedUserPosts);\n      return;\n    }\n\n    const test = [];\n    const postsArr = posts && Object.keys(posts).map(key => posts[key].categoryId === categoryId && test.push(posts[key]));\n    setPostsArr(test);\n  };\n\n  useEffect(() => {\n    let searchText = location.searchText;\n    const allPostArr = Object.keys(posts).map(key => posts[key]);\n\n    if (searchText && searchText.trim() !== \"\") {\n      searchText = searchText && location.searchText.toLowerCase();\n      const mockup = (allPostArr || []).filter(post => {\n        return post.title && post.title.toLowerCase().match(searchText) || post.description && post.description.toLowerCase().match(searchText) || post.user.username.toLowerCase().match(searchText) || post.user.firstName && post.user.firstName.toLowerCase().match(searchText) || post.user.lastName && post.user.lastName.toLowerCase().match(searchText);\n      });\n\n      if (!mockup.length) {\n        setNoti(\"NO POST FOUND\");\n      }\n\n      setPostsArr(mockup);\n    } else {\n      onClickCategory(\"news\");\n    }\n  }, [location]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageLoader, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"0px \"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 5,\n    className: classes.containRoot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SubNewsFeed, {\n    onClickCategory: onClickCategory,\n    selectedCategoryId: selectedCategoryId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, postsArr && postsArr.length > 0 ? postsArr.map(item => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      marginBottom: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(PostCard, {\n    post: item,\n    authUserId: authUserId,\n    isCurrentAuth: item.userId === authUserId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: \"text-center\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 23\n    }\n  }, noti), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.btn,\n    onClick: () => {\n      history.push(\"/people\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, \"FIND FRIENDS\"))))))))));\n};\n\nconst mapStateToProps = state => ({\n  categories: state.category.categories,\n  authUserId: state.auth.user.id,\n  posts: state.post.posts,\n  selectedPost: state.post.selected_post,\n  role: state.auth.user.role,\n  authProfile: state.user_profile.user_profile\n});\n\nexport default connect(mapStateToProps, {\n  getPosts,\n  getCategories,\n  getUsers,\n  getAllPublicPost,\n  getReactionTypes\n})(NewsFeed);","map":{"version":3,"sources":["/home/thanh/booking-sport/sportbook-admin/src/components/pages/newsFeed/NewsFeed.js"],"names":["React","useEffect","useState","makeStyles","useHistory","Grid","connect","PostCard","SubNewsFeed","getPosts","getAllPublicPost","getUsers","getCategories","PageLoader","getReactionTypes","Typography","Button","useStyles","theme","root","flexGrow","width","margin","paper","padding","spacing","textAlign","color","palette","text","secondary","NewsFeed","selectedPost","authProfile","role","authUserId","location","posts","classes","history","postsArr","setPostsArr","Object","keys","map","key","noti","setNoti","selectedCategoryId","setSelectedCategoryId","loading","setLoading","then","onClickCategory","categoryId","toUsers","followed","length","item","toUserId","push","id","followedUserPosts","i","userId","test","searchText","allPostArr","trim","toLowerCase","mockup","filter","post","title","match","description","user","username","firstName","lastName","containRoot","marginBottom","btn","mapStateToProps","state","categories","category","auth","selected_post","user_profile"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\nimport PostCard from \"../../custom/PostCard\";\nimport SubNewsFeed from \"./component/SubNewsFeed\";\nimport { getPosts, getAllPublicPost } from \"../../../store/actions/post\";\nimport { getUsers } from \"../../../store/actions/user\";\nimport { getCategories } from \"../../../store/actions/category\";\nimport PageLoader from \"../../custom/PageLoader\";\nimport { getReactionTypes } from \"../../../store/actions/like\";\nimport { Typography, Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\",\n    margin: \"10px 0 0 0\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst NewsFeed = ({\n  selectedPost,\n  authProfile,\n  getReactionTypes,\n  role,\n  getCategories,\n  getAllPublicPost,\n  authUserId,\n  getUsers,\n  location,\n  posts,\n}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [postsArr, setPostsArr] = useState(\n    posts && Object.keys(posts).map((key) => posts[key])\n  );\n\n  const [noti, setNoti] = useState(\n    \"NO POSTS, ADD SOME FRIENDS OR YOUR OWN POST :D\"\n  );\n  const [selectedCategoryId, setSelectedCategoryId] = useState(\"news\");\n\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getAllPublicPost(setLoading).then(() => {\n      setLoading(true);\n      getCategories(setLoading).then(() => {\n        setLoading(true);\n        getUsers(setLoading);\n        getReactionTypes(setLoading).then(() => {\n          onClickCategory(\"news\");\n        });\n      });\n    });\n  }, []);\n\n  useEffect(() => {\n    onClickCategory(\"news\");\n  }, [authProfile]);\n\n  const onClickCategory = (categoryId) => {\n    if (!authProfile) {\n      return;\n    }\n    setSelectedCategoryId(categoryId);\n    if (categoryId === \"all\") {\n      setPostsArr(posts && Object.keys(posts).map((key) => posts[key]));\n      return;\n    }\n    if (categoryId === \"news\") {\n      let toUsers =\n        authProfile.followed.length > 0\n          ? authProfile.followed.map((item) => item.toUserId)\n          : [];\n      if (toUsers) {\n        toUsers.push(authProfile.id);\n      }\n      const followedUserPosts = [];\n      Object.keys(posts).map((key) => {\n        for (let i = 0; i < toUsers.length; i++) {\n          if (posts[key].userId === toUsers[i]) {\n            followedUserPosts.push(posts[key]);\n          }\n        }\n      });\n      setPostsArr(followedUserPosts);\n      return;\n    }\n    const test = [];\n    const postsArr =\n      posts &&\n      Object.keys(posts).map(\n        (key) => posts[key].categoryId === categoryId && test.push(posts[key])\n      );\n\n    setPostsArr(test);\n  };\n\n  useEffect(() => {\n    let searchText = location.searchText;\n    const allPostArr = Object.keys(posts).map((key) => posts[key]);\n    if (searchText && searchText.trim() !== \"\") {\n      searchText = searchText && location.searchText.toLowerCase();\n      const mockup = (allPostArr || []).filter((post) => {\n        return (\n          (post.title && post.title.toLowerCase().match(searchText)) ||\n          (post.description &&\n            post.description.toLowerCase().match(searchText)) ||\n          post.user.username.toLowerCase().match(searchText) ||\n          (post.user.firstName &&\n            post.user.firstName.toLowerCase().match(searchText)) ||\n          (post.user.lastName &&\n            post.user.lastName.toLowerCase().match(searchText))\n        );\n      });\n      if (!mockup.length) {\n        setNoti(\"NO POST FOUND\");\n      }\n      setPostsArr(mockup);\n    } else {\n      onClickCategory(\"news\");\n    }\n  }, [location]);\n\n  return (\n    <div className={classes.root}>\n      <PageLoader loading={loading}>\n        <Grid container spacing={3} justify=\"center\">\n          <Grid item xs={10}>\n            <div style={{ margin: \"0px \" }}>\n              <Grid\n                container\n                justify=\"center\"\n                spacing={5}\n                className={classes.containRoot}\n              >\n                <Grid item xs={4}>\n                  <SubNewsFeed\n                    onClickCategory={onClickCategory}\n                    selectedCategoryId={selectedCategoryId}\n                  />\n                </Grid>\n                <Grid item xs={8}>\n                  {postsArr && postsArr.length > 0 ? (\n                    postsArr.map((item) => (\n                      <Grid item style={{ marginBottom: \"20px\" }}>\n                        <PostCard\n                          post={item}\n                          authUserId={authUserId}\n                          isCurrentAuth={item.userId === authUserId}\n                        />\n                      </Grid>\n                    ))\n                  ) : (\n                    <>\n                      <Typography\n                        variant=\"h6\"\n                        className=\"text-center\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                      >\n                        {noti}\n                      </Typography>\n                      <div className=\"text-center mt-4\">\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          className={classes.btn}\n                          onClick={() => {\n                            history.push(\"/people\");\n                          }}\n                        >\n                          FIND FRIENDS\n                        </Button>\n                      </div>\n                    </>\n                  )}\n                </Grid>\n              </Grid>\n            </div>\n          </Grid>\n        </Grid>\n      </PageLoader>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  categories: state.category.categories,\n  authUserId: state.auth.user.id,\n  posts: state.post.posts,\n  selectedPost: state.post.selected_post,\n  role: state.auth.user.role,\n  authProfile: state.user_profile.user_profile,\n});\nexport default connect(mapStateToProps, {\n  getPosts,\n  getCategories,\n  getUsers,\n  getAllPublicPost,\n  getReactionTypes,\n})(NewsFeed);\n"]},"metadata":{},"sourceType":"module"}