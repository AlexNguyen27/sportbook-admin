{"ast":null,"code":"var _jsxFileName = \"/home/thanh/booking-sport/sportbook-admin/src/components/pages/post/component/ViewPost.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPostById } from \"../../../../store/actions/post\";\nimport moment from \"moment\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ViewText from \"../../../custom/ViewText\";\nimport { Grid, Typography, Divider, Paper } from \"@material-ui/core\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport CommentsList from \"./comment/CommentsList\";\nimport PageTitle from \"../../../custom/PageTitle\";\nimport PageLoader from \"../../../custom/PageLoader\";\nimport clsx from \"clsx\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport Colors from \"../../../../constants/Colors\";\nimport { likeReaction } from \"../../../../store/actions/like\";\nimport PopularArticles from \"../../newsFeed/component/PopularArticles\";\nimport { getPopularPost } from \"../../../../utils/commonFunction\";\nimport { BASE_IMAGE_URL } from \"../../../../store/actions/types\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\n\nconst ViewPost = ({\n  postId,\n  userProfile,\n  getPostById,\n  selectedPost,\n  posts,\n  likeReaction\n}) => {\n  const [loading, setLoading] = useState(true);\n  const classes = useStyles();\n  const history = useHistory();\n  const [expanded, setExpanded] = React.useState(false);\n  const [isLiked, setIsLiked] = useState(userProfile && userProfile.userFavoritePosts.find(item => item.id === postId));\n  useEffect(() => {\n    setLoading(true);\n    getPostById(setLoading, postId);\n  }, [postId]);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const {\n    title,\n    description,\n    categoryId,\n    view,\n    user: {\n      id: userId,\n      firstName,\n      lastName,\n      githubUsername,\n      imageUrl: avatar,\n      username\n    } = {},\n    comments,\n    reactions,\n    updatedAt\n  } = selectedPost || {};\n  const [totalLike, setTotalLike] = useState(reactions && reactions.length);\n  const totalComments = comments ? comments.length : 0;\n\n  const handleOnLike = () => {\n    let userInfo = {};\n\n    if (selectedPost.user) {\n      userInfo = {\n        id: selectedPost.user.id,\n        username: selectedPost.user.username,\n        imageUrl: selectedPost.user.imageUrl,\n        firstName: selectedPost.user.firstName,\n        lastName: selectedPost.user.lastName,\n        githubUsername: selectedPost.user.githubUsername\n      };\n    }\n\n    likeReaction(selectedPost.id, categoryId, title, description, setIsLiked, setTotalLike, userInfo);\n  };\n\n  useEffect(() => {\n    setIsLiked(userProfile && userProfile.userFavoritePosts.find(item => item.id === postId));\n    setTotalLike(reactions && reactions.length);\n  }, [handleOnLike]);\n  const popularPosts = getPopularPost(posts, 8);\n  const userName = firstName && lastName ? firstName + \" \" + lastName : username;\n  return /*#__PURE__*/React.createElement(PageLoader, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    title: title,\n    center: true,\n    editMode: \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    className: \"text-center\",\n    onClick: () => history.push(`/user-profile/${userId}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"userImage\",\n    src: avatar || BASE_IMAGE_URL,\n    alt: \"user image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, userName)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"aSubText\",\n    target: \"_blank\",\n    href: `https://github.com/${githubUsername}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(GitHubIcon, {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }), \" \", githubUsername))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    style: {\n      color: \"#888\",\n      marginTop: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, moment(updatedAt).format(\"MMMM Do YYYY, h:mm:ss A\")))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ViewText, {\n    textBody: description,\n    className: \"viewMode viewPost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"like\",\n    style: {\n      color: Colors.green\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 19\n    }\n  }, view, \" \", view > 1 ? \"views\" : \"view\"), /*#__PURE__*/React.createElement(IconButton, {\n    style: {\n      color: isLiked ? Colors.like : \"\"\n    },\n    \"aria-label\": \"add to favorites\",\n    onClick: () => handleOnLike(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"like\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, totalLike)), /*#__PURE__*/React.createElement(IconButton, {\n    className: clsx(classes.expand, {\n      [classes.expandOpen]: expanded\n    }),\n    onClick: handleExpandClick,\n    \"aria-expanded\": expanded,\n    \"aria-label\": \"Show more comment\",\n    style: {\n      color: Colors.comment\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ChatIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"like\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, totalComments))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    in: true,\n    timeout: \"auto\",\n    style: {\n      width: \"100%\"\n    },\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    style: {\n      color: \"#888\",\n      margin: \"5px 10px 10px 0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 19\n    }\n  }, \"All Comments\"), /*#__PURE__*/React.createElement(CommentsList, {\n    postId: postId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: \"mb-2 mt-1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, \"More from Love Sports\"), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    style: {\n      cursor: \"pointer\"\n    },\n    className: \"mt-3 mb-4\",\n    spacing: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }, popularPosts && popularPosts.length > 0 && popularPosts.map(item => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: \"p-3\",\n    xs: 3,\n    onClick: () => history.push(`/view-post/${item.id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: \"p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    sm: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 35\n    }\n  }, item.title), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(EventIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 39\n    }\n  }), moment(item.createdAt).format(\"MMM Do YYYY\"))), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(PersonIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 37\n    }\n  }), item.user.firstName && item.user.lastName ? item.user.firstName + \" \" + item.user.lastName : item.user.username)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 35\n    }\n  }, item.reactions.length, \" \", item.reactions.length > 1 ? `Likes` : `Like`)))))))))))))));\n};\n\nconst mapStateToProps = state => ({\n  categories: state.category.categories,\n  selectedPost: state.post.selected_post,\n  userProfile: state.user_profile.user_profile,\n  posts: state.post.posts\n});\n\nexport default connect(mapStateToProps, {\n  getPostById,\n  likeReaction\n})(ViewPost);","map":{"version":3,"sources":["/home/thanh/booking-sport/sportbook-admin/src/components/pages/post/component/ViewPost.js"],"names":["React","useEffect","useState","connect","getPostById","moment","useHistory","makeStyles","ViewText","Grid","Typography","Divider","Paper","GitHubIcon","CommentsList","PageTitle","PageLoader","clsx","PersonIcon","Collapse","Avatar","IconButton","red","FavoriteIcon","ChatIcon","EventIcon","Colors","likeReaction","PopularArticles","getPopularPost","BASE_IMAGE_URL","useStyles","theme","root","width","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","avatar","backgroundColor","ViewPost","postId","userProfile","selectedPost","posts","loading","setLoading","classes","history","expanded","setExpanded","isLiked","setIsLiked","userFavoritePosts","find","item","id","handleExpandClick","title","description","categoryId","view","user","userId","firstName","lastName","githubUsername","imageUrl","username","comments","reactions","updatedAt","totalLike","setTotalLike","length","totalComments","handleOnLike","userInfo","popularPosts","userName","push","color","marginTop","format","green","like","expandOpen","comment","margin","cursor","map","createdAt","mapStateToProps","state","categories","category","post","selected_post","user_profile"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPostById } from \"../../../../store/actions/post\";\nimport moment from \"moment\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ViewText from \"../../../custom/ViewText\";\nimport { Grid, Typography, Divider, Paper } from \"@material-ui/core\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport CommentsList from \"./comment/CommentsList\";\nimport PageTitle from \"../../../custom/PageTitle\";\nimport PageLoader from \"../../../custom/PageLoader\";\nimport clsx from \"clsx\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport Colors from \"../../../../constants/Colors\";\nimport { likeReaction } from \"../../../../store/actions/like\";\nimport PopularArticles from \"../../newsFeed/component/PopularArticles\";\nimport { getPopularPost } from \"../../../../utils/commonFunction\";\nimport { BASE_IMAGE_URL } from \"../../../../store/actions/types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\nconst ViewPost = ({\n  postId,\n  userProfile,\n  getPostById,\n  selectedPost,\n  posts,\n  likeReaction,\n}) => {\n  const [loading, setLoading] = useState(true);\n  const classes = useStyles();\n  const history = useHistory();\n  const [expanded, setExpanded] = React.useState(false);\n  const [isLiked, setIsLiked] = useState(\n    userProfile &&\n      userProfile.userFavoritePosts.find((item) => item.id === postId)\n  );\n\n  useEffect(() => {\n    setLoading(true);\n    getPostById(setLoading, postId);\n  }, [postId]);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const {\n    title,\n    description,\n    categoryId,\n    view,\n    user: {\n      id: userId,\n      firstName,\n      lastName,\n      githubUsername,\n      imageUrl: avatar,\n      username,\n    } = {},\n    comments,\n    reactions,\n    updatedAt,\n  } = selectedPost || {};\n  const [totalLike, setTotalLike] = useState(reactions && reactions.length);\n  const totalComments = comments ? comments.length : 0;\n\n  const handleOnLike = () => {\n    let userInfo = {};\n    if (selectedPost.user) {\n      userInfo = {\n        id: selectedPost.user.id,\n        username: selectedPost.user.username,\n        imageUrl: selectedPost.user.imageUrl,\n        firstName: selectedPost.user.firstName,\n        lastName: selectedPost.user.lastName,\n        githubUsername: selectedPost.user.githubUsername,\n      };\n    }\n    likeReaction(\n      selectedPost.id,\n      categoryId,\n      title,\n      description,\n      setIsLiked,\n      setTotalLike,\n      userInfo\n    );\n  };\n\n  useEffect(() => {\n    setIsLiked(\n      userProfile &&\n        userProfile.userFavoritePosts.find((item) => item.id === postId)\n    );\n    setTotalLike(reactions && reactions.length);\n  }, [handleOnLike]);\n\n  const popularPosts = getPopularPost(posts, 8);\n\n  const userName =\n    firstName && lastName ? firstName + \" \" + lastName : username;\n\n  return (\n    <PageLoader loading={loading}>\n      <Grid container justify=\"center\">\n        <Grid item xs={10}>\n          <PageTitle title={title} center editMode=\"false\" />\n          <Grid container>\n            <Grid item xs={12}>\n              <Grid container justify=\"flex-start\">\n                <Grid\n                  item\n                  xs={1}\n                  className=\"text-center\"\n                  onClick={() => history.push(`/user-profile/${userId}`)}\n                >\n                  <img\n                    className=\"userImage\"\n                    src={avatar || BASE_IMAGE_URL}\n                    alt=\"user image\"\n                  />\n                </Grid>\n                <Grid item xs={8}>\n                  <Grid item>\n                    <Typography variant=\"h6\">{userName}</Typography>\n                  </Grid>\n                  <Grid item>\n                    <Typography variant=\"subtitle2\">\n                      <a\n                        className=\"aSubText\"\n                        target=\"_blank\"\n                        href={`https://github.com/${githubUsername}`}\n                      >\n                        <GitHubIcon className=\"mr-1\" /> {githubUsername}\n                      </a>\n                    </Typography>\n                  </Grid>\n                  <Grid item>\n                    <Typography\n                      variant=\"subtitle2\"\n                      style={{ color: \"#888\", marginTop: \"5px\" }}\n                    >\n                      {moment(updatedAt).format(\"MMMM Do YYYY, h:mm:ss A\")}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <hr className=\"mb-0\" />\n              <ViewText textBody={description} className=\"viewMode viewPost\" />\n            </Grid>\n            <Grid item xs={12}>\n              <Grid container>\n                <Grid item xs={5}>\n                  <span className=\"like\" style={{ color: Colors.green }}>\n                    {view} {view > 1 ? \"views\" : \"view\"}\n                  </span>\n                  <IconButton\n                    style={{ color: isLiked ? Colors.like : \"\" }}\n                    aria-label=\"add to favorites\"\n                    onClick={() => handleOnLike()}\n                  >\n                    <FavoriteIcon />\n                    <span className=\"like\">{totalLike}</span>\n                  </IconButton>\n                  <IconButton\n                    className={clsx(classes.expand, {\n                      [classes.expandOpen]: expanded,\n                    })}\n                    onClick={handleExpandClick}\n                    aria-expanded={expanded}\n                    aria-label=\"Show more comment\"\n                    style={{ color: Colors.comment }}\n                  >\n                    <ChatIcon />\n                    <span className=\"like\">{totalComments}</span>\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <Grid container>\n                <Collapse\n                  in={true}\n                  timeout=\"auto\"\n                  style={{ width: \"100%\" }}\n                  unmountOnExit\n                >\n                  <Typography\n                    variant=\"h6\"\n                    style={{ color: \"#888\", margin: \"5px 10px 10px 0px\" }}\n                  >\n                    All Comments\n                  </Typography>\n                  {/* <hr className=\"mt-0\"/> */}\n                  <CommentsList postId={postId} />\n                </Collapse>\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography className=\"mb-2 mt-1\" variant=\"h5\">\n                More from Love Sports\n              </Typography>\n              <Divider />\n\n              <Grid\n                container\n                style={{ cursor: \"pointer\" }}\n                className=\"mt-3 mb-4\"\n                spacing=\"3\"\n              >\n                {popularPosts &&\n                  popularPosts.length > 0 &&\n                  popularPosts.map((item) => (\n                    <>\n                      <Grid\n                        item\n                        className=\"p-3\"\n                        xs={3}\n                        onClick={() => history.push(`/view-post/${item.id}`)}\n                      >\n                        <Paper style={{ height: \"100%\" }}>\n                          <Grid container spacing={2} className=\"p-3\">\n                            <Grid item xs={3} sm container>\n                              <Grid container direction=\"column\">\n                                <Grid item>\n                                  <Typography variant=\"h6\" gutterBottom>\n                                    {item.title}\n                                  </Typography>\n                                  <div>\n                                    <Typography\n                                      variant=\"caption\"\n                                      color=\"textSecondary\"\n                                    >\n                                      <EventIcon />\n                                      {moment(item.createdAt).format(\n                                        \"MMM Do YYYY\"\n                                      )}\n                                    </Typography>\n                                  </div>\n                                  <Typography\n                                    variant=\"caption\"\n                                    color=\"textSecondary\"\n                                  >\n                                    <PersonIcon />\n                                    {item.user.firstName && item.user.lastName\n                                      ? item.user.firstName +\n                                        \" \" +\n                                        item.user.lastName\n                                      : item.user.username}\n                                  </Typography>\n                                </Grid>\n                                <Grid item className=\"mt-2\">\n                                  <Typography\n                                    variant=\"caption\"\n                                    className=\"ml-2\"\n                                  >\n                                    {item.reactions.length}{\" \"}\n                                    {item.reactions.length > 1\n                                      ? `Likes`\n                                      : `Like`}\n                                  </Typography>\n                                </Grid>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        </Paper>\n                      </Grid>\n                    </>\n                  ))}\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </PageLoader>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  categories: state.category.categories,\n  selectedPost: state.post.selected_post,\n  userProfile: state.user_profile.user_profile,\n  posts: state.post.posts,\n});\nexport default connect(mapStateToProps, { getPostById, likeReaction })(\n  ViewPost\n);\n"]},"metadata":{},"sourceType":"module"}