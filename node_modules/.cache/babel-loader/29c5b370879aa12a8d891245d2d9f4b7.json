{"ast":null,"code":"var _jsxFileName = \"/home/thanh/booking-sport/sportbook-admin/src/components/pages/post/PostsList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATE_TIME, POST_STATUS_OBJECT } from \"../../../utils/common\";\nimport { forwardRef } from \"react\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport PageLoader from \"../../custom/PageLoader\";\nimport Swal from \"sweetalert2\";\nimport { getPosts, deletePost } from \"../../../store/actions/post\";\nimport { Button } from \"@material-ui/core\";\nimport { getCategories } from \"../../../store/actions/category\";\nimport Colors from \"../../../constants/Colors\";\nconst tableIcons = {\n  Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 35\n    }\n  }))),\n  Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 37\n    }\n  }))),\n  Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 37\n    }\n  }))),\n  // Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }))),\n  // Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 38\n    }\n  }))),\n  Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 38\n    }\n  }))),\n  FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 41\n    }\n  }))),\n  LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 40\n    }\n  }))),\n  NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 40\n    }\n  }))),\n  PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }))),\n  ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 43\n    }\n  }))),\n  Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 38\n    }\n  }))),\n  SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowDownward, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 41\n    }\n  }))),\n  ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 47\n    }\n  }))),\n  ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 42\n    }\n  })))\n};\n\nconst PostsList = ({\n  getPosts,\n  posts,\n  deletePost,\n  categories,\n  getCategories\n}) => {\n  const history = useHistory();\n  const [state, setState] = useState({\n    columns: [{\n      title: \"Name\",\n      field: \"title\"\n    }, {\n      title: \"Category\",\n      field: \"categoryName\"\n    }, {\n      title: \"Status\",\n      field: \"status\",\n      lookup: POST_STATUS_OBJECT\n    }, {\n      title: \"Author\",\n      field: \"username\"\n    }, {\n      title: \"Like\",\n      field: \"totalLike\"\n    }, {\n      title: \"Created at\",\n      field: \"createdAt\",\n      editable: \"never\"\n    }, {\n      title: \"Updated at\",\n      field: \"updatedAt\",\n      editable: \"never\"\n    }],\n    data: [{\n      title: \"Weather\",\n      category: \"Home\",\n      status: \"public\",\n      author: \"Thanh Nguyen\",\n      totalLike: 100,\n      createdAt: moment(\"2020-05-29T14:49:05.661Z\").format(DATE_TIME),\n      updatedAt: moment(\"2020-05-29T14:49:05.661Z\").format(DATE_TIME)\n    }]\n  });\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getPosts(setLoading);\n\n    if (!categories) {\n      setLoading(false);\n      getCategories(setLoading);\n    }\n  }, [loading]);\n\n  const getDateTime = date => moment(date).format(DATE_TIME);\n\n  const postsArray = Object.keys(posts).map(postId => {\n    const post = posts[postId];\n    return { ...post,\n      createdAt: getDateTime(post.createdAt),\n      updatedAt: getDateTime(post.updatedAt),\n      categoryName: post.category ? post.category.name : \"\",\n      username: post.user ? post.user.username : \"\",\n      totalLike: post.reactions ? post.reactions.length : 0\n    };\n  });\n  return /*#__PURE__*/React.createElement(PageLoader, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: `100%`,\n      overflowX: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    icons: tableIcons,\n    title: \"List Of Posts\",\n    columns: state.columns,\n    data: postsArray || [],\n    options: {\n      pageSize: 8,\n      headerStyle: {\n        fontWeight: \"bold\"\n      },\n      rowStyle: {\n        overflowX: \"auto\"\n      }\n    },\n    actions: [{\n      icon: () => /*#__PURE__*/React.createElement(Visibility, {\n        style: {\n          color: Colors.view\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 27\n        }\n      }),\n      tooltip: \"View Post\",\n      onClick: (event, rowData) => {\n        // window.open(`view-post/${rowData.id}`, \"_blank\");\n        history.push(`/view-post/${rowData.id}`);\n      }\n    }, {\n      icon: () => /*#__PURE__*/React.createElement(Edit, {\n        style: {\n          color: Colors.orange\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 27\n        }\n      }),\n      tooltip: \"Edit Post\",\n      onClick: (event, rowData) => {\n        // window.open(`edit-post/${rowData.id}`, \"_blank\");\n        history.push(`/edit-post/${rowData.id}`);\n      }\n    }, {\n      icon: () => /*#__PURE__*/React.createElement(Delete, {\n        style: {\n          color: Colors.red\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 27\n        }\n      }),\n      tooltip: \"Delete Post\",\n      onClick: (event, rowData) => {\n        Swal.fire({\n          title: `Are you sure to delete ?`,\n          text: \"You won't be able to revert this!\",\n          type: \"warning\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: \"Yes, delete it!\"\n        }).then(result => {\n          if (result.value) {\n            setLoading(true);\n            deletePost(setLoading, rowData.id);\n          }\n        });\n      }\n    }, {\n      icon: () => /*#__PURE__*/React.createElement(AddBox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 27\n        }\n      }),\n      onClick: (event, rowData) => {\n        history.push(\"/add-new-post\");\n      },\n      isFreeAction: true,\n      tooltip: \"Add Post\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  posts: state.post.posts,\n  categories: state.category.categories\n});\n\nexport default connect(mapStateToProps, {\n  getPosts,\n  deletePost,\n  getCategories\n})(withRouter(PostsList));","map":{"version":3,"sources":["/home/thanh/booking-sport/sportbook-admin/src/components/pages/post/PostsList.js"],"names":["React","useEffect","useState","MaterialTable","useHistory","moment","connect","useDispatch","withRouter","DATE_TIME","POST_STATUS_OBJECT","forwardRef","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","Delete","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","Visibility","PageLoader","Swal","getPosts","deletePost","Button","getCategories","Colors","tableIcons","Add","props","ref","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","PostsList","posts","categories","history","state","setState","columns","title","field","lookup","editable","data","category","status","author","totalLike","createdAt","format","updatedAt","loading","setLoading","getDateTime","date","postsArray","Object","keys","map","postId","post","categoryName","name","username","user","reactions","length","maxWidth","overflowX","pageSize","headerStyle","fontWeight","rowStyle","icon","color","view","tooltip","onClick","event","rowData","push","id","orange","red","fire","text","type","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","isFreeAction","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATE_TIME, POST_STATUS_OBJECT } from \"../../../utils/common\";\n\nimport { forwardRef } from \"react\";\n\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport Visibility from \"@material-ui/icons/Visibility\";\n\nimport PageLoader from \"../../custom/PageLoader\";\nimport Swal from \"sweetalert2\";\nimport { getPosts, deletePost } from \"../../../store/actions/post\";\nimport { Button } from \"@material-ui/core\";\nimport { getCategories } from \"../../../store/actions/category\";\nimport Colors from \"../../../constants/Colors\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  // Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  // Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst PostsList = ({\n  getPosts,\n  posts,\n  deletePost,\n  categories,\n  getCategories,\n}) => {\n  const history = useHistory();\n  const [state, setState] = useState({\n    columns: [\n      { title: \"Name\", field: \"title\" },\n      { title: \"Category\", field: \"categoryName\" },\n      { title: \"Status\", field: \"status\", lookup: POST_STATUS_OBJECT },\n      { title: \"Author\", field: \"username\" },\n      { title: \"Like\", field: \"totalLike\" },\n      {\n        title: \"Created at\",\n        field: \"createdAt\",\n        editable: \"never\",\n      },\n      {\n        title: \"Updated at\",\n        field: \"updatedAt\",\n        editable: \"never\",\n      },\n    ],\n    data: [\n      {\n        title: \"Weather\",\n        category: \"Home\",\n        status: \"public\",\n        author: \"Thanh Nguyen\",\n        totalLike: 100,\n        createdAt: moment(\"2020-05-29T14:49:05.661Z\").format(DATE_TIME),\n        updatedAt: moment(\"2020-05-29T14:49:05.661Z\").format(DATE_TIME),\n      },\n    ],\n  });\n\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getPosts(setLoading);\n    if (!categories) {\n      setLoading(false);\n      getCategories(setLoading);\n    }\n  }, [loading]);\n\n  const getDateTime = (date) => moment(date).format(DATE_TIME);\n\n  const postsArray = Object.keys(posts).map((postId) => {\n    const post = posts[postId];\n    return {\n      ...post,\n      createdAt: getDateTime(post.createdAt),\n      updatedAt: getDateTime(post.updatedAt),\n      categoryName: post.category ? post.category.name : \"\",\n      username: post.user ? post.user.username : \"\",\n      totalLike: post.reactions ? post.reactions.length : 0,\n    };\n  });\n\n  return (\n    <PageLoader loading={loading}>\n      <div style={{ maxWidth: `100%`, overflowX: \"auto\" }}>\n        <MaterialTable\n          icons={tableIcons}\n          title=\"List Of Posts\"\n          columns={state.columns}\n          data={postsArray || []}\n          options={{\n            pageSize: 8,\n            headerStyle: {\n              fontWeight: \"bold\",\n            },\n            rowStyle: {\n              overflowX: \"auto\",\n            },\n          }}\n          actions={[\n            {\n              icon: () => <Visibility style={{ color: Colors.view }} />,\n              tooltip: \"View Post\",\n              onClick: (event, rowData) => {\n                // window.open(`view-post/${rowData.id}`, \"_blank\");\n                history.push(`/view-post/${rowData.id}`);\n              },\n            },\n            {\n              icon: () => <Edit style={{ color: Colors.orange }} />,\n              tooltip: \"Edit Post\",\n              onClick: (event, rowData) => {\n                // window.open(`edit-post/${rowData.id}`, \"_blank\");\n                history.push(`/edit-post/${rowData.id}`);\n              },\n            },\n            {\n              icon: () => <Delete style={{ color: Colors.red }} />,\n              tooltip: \"Delete Post\",\n              onClick: (event, rowData) => {\n                Swal.fire({\n                  title: `Are you sure to delete ?`,\n                  text: \"You won't be able to revert this!\",\n                  type: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, delete it!\",\n                }).then((result) => {\n                  if (result.value) {\n                    setLoading(true);\n                    deletePost(setLoading, rowData.id);\n                  }\n                });\n              },\n            },\n            {\n              icon: () => <AddBox />,\n              onClick: (event, rowData) => {\n                history.push(\"/add-new-post\");\n              },\n              isFreeAction: true,\n              tooltip: \"Add Post\",\n            },\n          ]}\n        />\n      </div>\n    </PageLoader>\n  );\n};\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  posts: state.post.posts,\n  categories: state.category.categories,\n});\nexport default connect(mapStateToProps, {\n  getPosts,\n  deletePost,\n  getCategories,\n})(withRouter(PostsList));\n"]},"metadata":{},"sourceType":"module"}