{"ast":null,"code":"var _jsxFileName = \"/home/thanh/booking-sport/sportbook-admin/src/components/pages/category/CategoryList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport moment from \"moment\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\"; // import { SAVE_CURRENT_USER } from \"../../../store/actions/types\";\n\nimport { DATE_TIME } from \"../../../utils/common\";\nimport { getCategories, addCategory, deleteCatgory, updateCategory } from \"../../../store/actions/category\";\nimport { forwardRef } from \"react\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport PageLoader from \"../../custom/PageLoader\";\nimport Swal from \"sweetalert2\";\nimport Colors from \"../../../constants/Colors\";\nconst tableIcons = {\n  Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 35\n    }\n  }))),\n  Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }\n  }))),\n  Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 37\n    }\n  }))),\n  // Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }))),\n  Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n    ref: ref,\n    style: {\n      color: Colors.orange\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }))),\n  Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 38\n    }\n  }))),\n  Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 38\n    }\n  }))),\n  FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 41\n    }\n  }))),\n  LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 40\n    }\n  }))),\n  NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 40\n    }\n  }))),\n  PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }))),\n  ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 43\n    }\n  }))),\n  Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 38\n    }\n  }))),\n  SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowDownward, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 41\n    }\n  }))),\n  ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 47\n    }\n  }))),\n  ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 42\n    }\n  })))\n};\n\nconst CategoriesList = ({\n  categories,\n  getCategories,\n  addCategory,\n  updateCategory,\n  deleteCatgory\n}) => {\n  const dispatch = useDispatch();\n  const [state, setState] = useState({\n    columns: [{\n      title: \"Name\",\n      field: \"name\",\n      validate: rowData => rowData.name === \"\" ? {\n        isValid: false,\n        helperText: \"Name cannot be empty\"\n      } : true\n    }, {\n      title: \"Status\",\n      field: \"status\",\n      lookup: {\n        public: \"Public\",\n        private: \"Private\"\n      },\n      initialEditValue: \"public\"\n    }, {\n      title: \"Created At\",\n      field: \"createdAt\",\n      editable: \"never\"\n    }],\n    data: [{\n      name: \"home\",\n      status: \"public\",\n      createdAt: moment(\"2020-05-29T14:49:05.661Z\").format(DATE_TIME)\n    }]\n  });\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    getCategories(setLoading);\n  }, [loading]);\n\n  const getDateTime = date => moment(date).format(DATE_TIME);\n\n  const categoryArr = Object.keys(categories).map(cateId => ({ ...categories[cateId],\n    createdAt: getDateTime(categories[cateId].createdAt)\n  }));\n  return /*#__PURE__*/React.createElement(PageLoader, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: `100%`,\n      overflowX: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    icons: tableIcons,\n    title: \"List Of Categories\",\n    columns: state.columns,\n    data: categoryArr || [],\n    options: {\n      pageSize: 8,\n      headerStyle: {\n        fontWeight: \"bold\"\n      },\n      rowStyle: {\n        overflowX: \"auto\"\n      }\n    },\n    actions: [{\n      icon: () => /*#__PURE__*/React.createElement(Delete, {\n        style: {\n          color: Colors.red\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 27\n        }\n      }),\n      tooltip: \"Delete Category\",\n      onClick: (event, rowData) => {\n        Swal.fire({\n          title: `Are you sure to delete ?`,\n          text: \"You won't be able to revert this!\",\n          type: \"warning\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: \"Yes, delete it!\"\n        }).then(result => {\n          if (result.value) {\n            setLoading(true);\n            deleteCatgory(setLoading, rowData.id); // deleteUser(setLoading, rowData.id);\n          }\n        });\n      }\n    }],\n    editable: {\n      onRowAdd: newData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const {\n            name,\n            status\n          } = newData;\n          setLoading(true);\n          addCategory(setLoading, name, status);\n          resolve();\n        }, 1000);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          resolve(); // edit categories\n\n          setLoading(true);\n          const {\n            name,\n            status,\n            id\n          } = newData;\n          updateCategory(setLoading, name, status, id);\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 100);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  categories: state.category.categories\n});\n\nexport default connect(mapStateToProps, {\n  getCategories,\n  addCategory,\n  deleteCatgory,\n  updateCategory\n})(withRouter(CategoriesList));","map":{"version":3,"sources":["/home/thanh/booking-sport/sportbook-admin/src/components/pages/category/CategoryList.js"],"names":["React","useEffect","useState","MaterialTable","moment","connect","useDispatch","withRouter","DATE_TIME","getCategories","addCategory","deleteCatgory","updateCategory","forwardRef","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","Delete","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","PageLoader","Swal","Colors","tableIcons","Add","props","ref","DetailPanel","color","orange","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","CategoriesList","categories","dispatch","state","setState","columns","title","field","validate","rowData","name","isValid","helperText","lookup","public","private","initialEditValue","editable","data","status","createdAt","format","loading","setLoading","getDateTime","date","categoryArr","Object","keys","map","cateId","maxWidth","overflowX","pageSize","headerStyle","fontWeight","rowStyle","icon","red","tooltip","onClick","event","fire","text","type","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","id","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","prevState","indexOf","mapStateToProps","category"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport moment from \"moment\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n// import { SAVE_CURRENT_USER } from \"../../../store/actions/types\";\nimport { DATE_TIME } from \"../../../utils/common\";\nimport {\n  getCategories,\n  addCategory,\n  deleteCatgory,\n  updateCategory,\n} from \"../../../store/actions/category\";\n\nimport { forwardRef } from \"react\";\n\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\n\nimport PageLoader from \"../../custom/PageLoader\";\nimport Swal from \"sweetalert2\";\nimport Colors from \"../../../constants/Colors\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  // Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => (\n    <Edit {...props} ref={ref} style={{ color: Colors.orange }} />\n  )),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst CategoriesList = ({\n  categories,\n  getCategories,\n  addCategory,\n  updateCategory,\n  deleteCatgory,\n}) => {\n  const dispatch = useDispatch();\n  const [state, setState] = useState({\n    columns: [\n      {\n        title: \"Name\",\n        field: \"name\",\n\n        validate: (rowData) =>\n          rowData.name === \"\"\n            ? { isValid: false, helperText: \"Name cannot be empty\" }\n            : true,\n      },\n      {\n        title: \"Status\",\n        field: \"status\",\n        lookup: { public: \"Public\", private: \"Private\" },\n        initialEditValue: \"public\",\n      },\n      { title: \"Created At\", field: \"createdAt\", editable: \"never\" },\n    ],\n    data: [\n      {\n        name: \"home\",\n        status: \"public\",\n        createdAt: moment(\"2020-05-29T14:49:05.661Z\").format(DATE_TIME),\n      },\n    ],\n  });\n\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    getCategories(setLoading);\n  }, [loading]);\n\n  const getDateTime = (date) => moment(date).format(DATE_TIME);\n\n  const categoryArr = Object.keys(categories).map((cateId) => ({\n    ...categories[cateId],\n    createdAt: getDateTime(categories[cateId].createdAt),\n  }));\n\n  return (\n    <PageLoader loading={loading}>\n      <div style={{ maxWidth: `100%`, overflowX: \"auto\" }}>\n        <MaterialTable\n          icons={tableIcons}\n          title=\"List Of Categories\"\n          columns={state.columns}\n          data={categoryArr || []}\n          options={{\n            pageSize: 8,\n            headerStyle: {\n              fontWeight: \"bold\",\n            },\n            rowStyle: {\n              overflowX: \"auto\",\n            },\n          }}\n          actions={[\n            {\n              icon: () => <Delete style={{ color: Colors.red }} />,\n              tooltip: \"Delete Category\",\n              onClick: (event, rowData) => {\n                Swal.fire({\n                  title: `Are you sure to delete ?`,\n                  text: \"You won't be able to revert this!\",\n                  type: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, delete it!\",\n                }).then((result) => {\n                  if (result.value) {\n                    setLoading(true);\n                    deleteCatgory(setLoading, rowData.id);\n                    // deleteUser(setLoading, rowData.id);\n                  }\n                });\n              },\n            },\n          ]}\n          editable={{\n            onRowAdd: (newData) =>\n              new Promise((resolve, reject) => {\n                setTimeout(() => {\n                  const { name, status } = newData;\n                  setLoading(true);\n                  addCategory(setLoading, name, status);\n                  resolve();\n                }, 1000);\n              }),\n            onRowUpdate: (newData, oldData) =>\n              new Promise((resolve, reject) => {\n                setTimeout(() => {\n                  resolve();\n                  // edit categories\n                  setLoading(true);\n                  const { name, status, id } = newData;\n                  updateCategory(setLoading, name, status, id);\n                  if (oldData) {\n                    setState((prevState) => {\n                      const data = [...prevState.data];\n                      data[data.indexOf(oldData)] = newData;\n                      return { ...prevState, data };\n                    });\n                  }\n                }, 100);\n              }),\n          }}\n        />\n      </div>\n    </PageLoader>\n  );\n};\nconst mapStateToProps = (state) => ({\n  categories: state.category.categories,\n});\nexport default connect(mapStateToProps, {\n  getCategories,\n  addCategory,\n  deleteCatgory,\n  updateCategory,\n})(withRouter(CategoriesList));\n"]},"metadata":{},"sourceType":"module"}