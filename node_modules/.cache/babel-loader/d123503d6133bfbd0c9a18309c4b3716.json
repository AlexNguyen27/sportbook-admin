{"ast":null,"code":"var _jsxFileName = \"/home/thanh/booking-sport/sportbook-admin/src/components/pages/post/component/ReportModal.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { Row, Col, Modal, ModalHeader, ModalBody, ModalFooter, Form } from \"reactstrap\";\nimport Button from \"@material-ui/core/Button\";\nimport TextFieldInputWithHeader from \"../../../custom/TextFieldInputWithheader\";\nimport { GET_ERRORS } from \"../../../../store/actions/types\";\nimport { clearErrors } from \"../../../../store/actions/common\";\nimport PageLoader from \"../../../custom/PageLoader\";\nimport { addReport } from \"../../../../store/actions/report\";\n\nconst ReportModal = ({\n  auth: {\n    user\n  },\n  postId,\n  clearErrors,\n  errors,\n  modal,\n  addReport,\n  setModal\n}) => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [reason, setReason] = useState(\"\"); // Save on change input value\n\n  const onChange = e => {\n    setReason(e.target.value);\n  }; // CLOSE MODAL ACTION\n\n\n  const closeModal = () => {\n    setModal(false);\n    clearErrors();\n    setReason(\"\");\n  }; // HANDLE ON SUBMIT FROM ADD NEW GROUP\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n    let error = {};\n\n    if (reason.trim() === \"\") {\n      error.reason = \"This field is required!\";\n    }\n\n    dispatch({\n      type: GET_ERRORS,\n      errors: error\n    });\n\n    if (JSON.stringify(error) === \"{}\") {\n      setLoading(true);\n      addReport(setLoading, user.id, postId, reason);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: () => closeModal(),\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageLoader, {\n    loading: loading,\n    noPadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: () => closeModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Report the post\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextFieldInputWithHeader, {\n    id: \"outlined-multiline-flexible\",\n    name: \"reason\",\n    label: \"Enter reason you report this post\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    variant: \"outlined\",\n    value: reason,\n    onChange: onChange,\n    error: errors.reason,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    className: \"ml-2\",\n    onClick: () => closeModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Cancel\")))));\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  clearErrors,\n  addReport\n})(ReportModal);","map":{"version":3,"sources":["/home/thanh/booking-sport/sportbook-admin/src/components/pages/post/component/ReportModal.js"],"names":["React","useState","useEffect","connect","useDispatch","Row","Col","Modal","ModalHeader","ModalBody","ModalFooter","Form","Button","TextFieldInputWithHeader","GET_ERRORS","clearErrors","PageLoader","addReport","ReportModal","auth","user","postId","errors","modal","setModal","dispatch","loading","setLoading","reason","setReason","onChange","e","target","value","closeModal","onSubmit","preventDefault","error","trim","type","JSON","stringify","id","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SACEC,GADF,EAEEC,GAFF,EAGEC,KAHF,EAIEC,WAJF,EAKEC,SALF,EAMEC,WANF,EAOEC,IAPF,QAQO,YARP;AASA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,wBAAP,MAAqC,0CAArC;AACA,SAASC,UAAT,QAA2B,iCAA3B;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAASC,SAAT,QAA0B,kCAA1B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GADa;AAEnBC,EAAAA,MAFmB;AAGnBN,EAAAA,WAHmB;AAInBO,EAAAA,MAJmB;AAKnBC,EAAAA,KALmB;AAMnBN,EAAAA,SANmB;AAOnBO,EAAAA;AAPmB,CAAD,KAQd;AACJ,QAAMC,QAAQ,GAAGrB,WAAW,EAA5B;AACA,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwB1B,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAAC2B,MAAD,EAASC,SAAT,IAAsB5B,QAAQ,CAAC,EAAD,CAApC,CAHI,CAKJ;;AACA,QAAM6B,QAAQ,GAAIC,CAAD,IAAO;AACtBF,IAAAA,SAAS,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAFD,CANI,CASJ;;;AACA,QAAMC,UAAU,GAAG,MAAM;AACvBV,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAT,IAAAA,WAAW;AACXc,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAJD,CAVI,CAgBJ;;;AACA,QAAMM,QAAQ,GAAIJ,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACK,cAAF;AAEA,QAAIC,KAAK,GAAG,EAAZ;;AACA,QAAIT,MAAM,CAACU,IAAP,OAAkB,EAAtB,EAA0B;AACxBD,MAAAA,KAAK,CAACT,MAAN,GAAe,yBAAf;AACD;;AAEDH,IAAAA,QAAQ,CAAC;AACPc,MAAAA,IAAI,EAAEzB,UADC;AAEPQ,MAAAA,MAAM,EAAEe;AAFD,KAAD,CAAR;;AAKA,QAAIG,IAAI,CAACC,SAAL,CAAeJ,KAAf,MAA0B,IAA9B,EAAoC;AAClCV,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAV,MAAAA,SAAS,CAACU,UAAD,EAAaP,IAAI,CAACsB,EAAlB,EAAsBrB,MAAtB,EAA8BO,MAA9B,CAAT;AACD;AACF,GAjBD;;AAmBA,sBACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEL,KAAf;AAAsB,IAAA,MAAM,EAAE,MAAMW,UAAU,EAA9C;AAAkD,IAAA,QAAQ,EAAE,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAER,OAArB;AAA8B,IAAA,SAAS,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAE,MAAMQ,UAAU,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAGE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAGH,CAAD,IAAOI,QAAQ,CAACJ,CAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,wBAAD;AACE,IAAA,EAAE,EAAC,6BADL;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAC,mCAHR;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,SAAS,MALX;AAME,IAAA,IAAI,EAAE,CANR;AAOE,IAAA,OAAO,EAAC,UAPV;AAQE,IAAA,KAAK,EAAEH,MART;AASE,IAAA,QAAQ,EAAEE,QATZ;AAUE,IAAA,KAAK,EAAER,MAAM,CAACM,MAVhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF,eAqBE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,IAAI,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,OAAO,EAAE,MAAMM,UAAU,EAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CArBF,CAHF,CADF,CADF;AA0CD,CAtFD;;AAwFA,MAAMS,eAAe,GAAIC,KAAD,KAAY;AAClCzB,EAAAA,IAAI,EAAEyB,KAAK,CAACzB,IADsB;AAElCG,EAAAA,MAAM,EAAEsB,KAAK,CAACtB;AAFoB,CAAZ,CAAxB;;AAKA,eAAenB,OAAO,CAACwC,eAAD,EAAkB;AAAE5B,EAAAA,WAAF;AAAeE,EAAAA;AAAf,CAAlB,CAAP,CACbC,WADa,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n} from \"reactstrap\";\nimport Button from \"@material-ui/core/Button\";\nimport TextFieldInputWithHeader from \"../../../custom/TextFieldInputWithheader\";\nimport { GET_ERRORS } from \"../../../../store/actions/types\";\nimport { clearErrors } from \"../../../../store/actions/common\";\nimport PageLoader from \"../../../custom/PageLoader\";\nimport { addReport } from \"../../../../store/actions/report\";\n\nconst ReportModal = ({\n  auth: { user },\n  postId,\n  clearErrors,\n  errors,\n  modal,\n  addReport,\n  setModal,\n}) => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [reason, setReason] = useState(\"\");\n\n  // Save on change input value\n  const onChange = (e) => {\n    setReason(e.target.value);\n  };\n  // CLOSE MODAL ACTION\n  const closeModal = () => {\n    setModal(false);\n    clearErrors();\n    setReason(\"\");\n  };\n\n  // HANDLE ON SUBMIT FROM ADD NEW GROUP\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    let error = {};\n    if (reason.trim() === \"\") {\n      error.reason = \"This field is required!\";\n    }\n\n    dispatch({\n      type: GET_ERRORS,\n      errors: error,\n    });\n\n    if (JSON.stringify(error) === \"{}\") {\n      setLoading(true);\n      addReport(setLoading, user.id, postId, reason);\n    }\n  };\n\n  return (\n    <Modal isOpen={modal} toggle={() => closeModal()} centered={true}>\n      <PageLoader loading={loading} noPadding>\n        <ModalHeader toggle={() => closeModal()}>Report the post</ModalHeader>\n        {/** MODAL BODY */}\n        <Form onSubmit={(e) => onSubmit(e)}>\n          <ModalBody>\n            <Row>\n              <Col xs=\"12\">\n                <TextFieldInputWithHeader\n                  id=\"outlined-multiline-flexible\"\n                  name=\"reason\"\n                  label=\"Enter reason you report this post\"\n                  fullWidth\n                  multiline\n                  rows={4}\n                  variant=\"outlined\"\n                  value={reason}\n                  onChange={onChange}\n                  error={errors.reason}\n                />\n              </Col>\n            </Row>\n          </ModalBody>\n\n          {/** MODAL FOOTER */}\n          <ModalFooter>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n            <Button\n              variant=\"contained\"\n              className=\"ml-2\"\n              onClick={() => closeModal()}\n            >\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Form>\n      </PageLoader>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { clearErrors, addReport })(\n  ReportModal\n);\n"]},"metadata":{},"sourceType":"module"}