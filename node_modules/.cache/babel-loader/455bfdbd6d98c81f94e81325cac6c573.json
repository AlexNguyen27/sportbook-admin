{"ast":null,"code":"var _jsxFileName = \"/home/thanh/booking-sport/sportbook-admin/src/components/pages/user/UserInfo.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport { Row, Col } from \"reactstrap\";\nimport Paper from \"@material-ui/core/Paper\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { BASE_URL, GET_ERRORS, CLEAR_ERRORS, BASE_IMAGE_URL } from \"../../../store/actions/types\";\nimport { capitalizeSnakeCase, trimObjProperties } from \"../../../utils/formatString\";\nimport PageLoader from \"../../custom/PageLoader\";\nimport TextFieldInputWithHeader from \"../../custom/TextFieldInputWithheader\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport { editUserInfo, getGithubProfile } from \"../../../store/actions/user\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  info: {\n    padding: theme.spacing(2),\n    // textAlign: \"\",\n    fontSize: \"16px\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nconst UserInfo = ({\n  current_user,\n  user,\n  errors,\n  location,\n  getGithubProfile,\n  editUserInfo\n}) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [formData, setformData] = useState({\n    username: \"\",\n    quote: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\",\n    address: \"\",\n    githubUsername: \"\"\n  });\n  const [image, setImage] = useState({\n    name: \"\",\n    file: \"\"\n  });\n  const [isEdit, setIsEdit] = useState(false);\n  const {\n    username,\n    firstName,\n    quote,\n    lastName,\n    email,\n    phone,\n    address,\n    githubUsername\n  } = formData; // Save on change input value\n\n  const onChange = e => {\n    setformData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  }; // const [selectedDate, setSelectedDate] = React.useState(\n  //   new Date(\"2014-08-18T21:11:54\")\n  // );\n  // const handleDateChange = (date) => {\n  //   setSelectedDate(date);\n  //   setformData({\n  //     ...formData,\n  //     dob: date,\n  //   });\n  // };\n\n\n  const setInit = () => {\n    if (window.location.pathname === \"/user-info\") {\n      setformData({\n        username: user.username || \"\",\n        firstName: user.firstName || \"\",\n        lastName: user.lastName || \"\",\n        quote: user.quote || \"\",\n        email: user.email || \"\",\n        phone: user.phone || \"\",\n        address: user.address || \"\",\n        githubUsername: user.githubUsername || \"\"\n      });\n    } else {\n      setformData({\n        username: current_user.username || \"\",\n        firstName: current_user.firstName || \"\",\n        lastName: current_user.lastName || \"\",\n        quote: current_user.quote || \"\",\n        email: current_user.email || \"\",\n        phone: current_user.phone || \"\",\n        address: current_user.address || \"\",\n        githubUsername: current_user.githubUsername || \"\"\n      });\n    }\n  };\n\n  useEffect(() => {\n    setInit();\n    getGithubAvatar();\n  }, []);\n\n  const getGithubAvatar = () => {\n    if (current_user && JSON.stringify(current_user) !== \"{}\") {\n      getGithubProfile(current_user.id, current_user.githubUsername);\n    } else {\n      getGithubProfile(user.id, user.githubUsername);\n    }\n  };\n\n  const onSubmit = () => {\n    const formatData = trimObjProperties(formData);\n    let error = {};\n    Object.keys(formatData).map(key => {\n      if (formatData[key].trim() === \"\") {\n        error[key] = \"This field is required\";\n      }\n    });\n    dispatch({\n      type: GET_ERRORS,\n      errors: error\n    });\n\n    if (JSON.stringify(error) === \"{}\") {\n      editUserInfo(setLoading, formatData);\n      getGithubAvatar();\n    }\n  };\n\n  useEffect(() => {\n    setInit();\n  }, []); // useEffect(() => {\n  //   getGithubAvatar();\n  // }, [current_user && current_user.imageUrl]);\n\n  let imageUrl = window.location.pathname === \"/user-info\" ? user.imageUrl : current_user.imageUrl;\n\n  if (!imageUrl) {\n    imageUrl = BASE_IMAGE_URL;\n  } // const handleCapture = ({ target }) => {\n  //   const fileName = target.files[0].name;\n  //   setLoading(true);\n  //   editUserInfo(setLoading, {}, target.files[0]);\n  //   if (target.accept.includes(\"image\")) {\n  //     setImage({\n  //       name: fileName,\n  //       file: target.files[0],\n  //     });\n  //   }\n  // };\n\n\n  const onCancel = () => {\n    setIsEdit(false);\n    setInit();\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(PageLoader, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => setIsEdit(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    className: \"mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }), \" Edit Info\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, Object.keys(formData).map(key => /*#__PURE__*/React.createElement(Paper, {\n    className: [classes.info, \"mt-2\"].join(\" \"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 19\n    }\n  }, isEdit ? /*#__PURE__*/React.createElement(TextFieldInputWithHeader, {\n    id: \"outlined-multiline-flexible\",\n    name: key,\n    label: capitalizeSnakeCase(key),\n    fullWidth: true,\n    type: \"fullname\",\n    value: formData[key],\n    onChange: onChange,\n    error: errors[key],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 23\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, capitalizeSnakeCase(key), \": \", formData[key]))), isEdit && /*#__PURE__*/React.createElement(Col, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: \"mr-4\",\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 23\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => onCancel(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 23\n    }\n  }, \"Cancel\")))), /*#__PURE__*/React.createElement(Col, {\n    xs: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: imageUrl,\n    alt: \"Girl in a jacket\",\n    width: \"100%\",\n    height: 400,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 19\n    }\n  }))))))));\n};\n\nconst mapStateToProps = state => ({\n  current_user: state.user.current_user,\n  user: state.auth.user,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  getGithubProfile,\n  editUserInfo\n})(UserInfo);","map":{"version":3,"sources":["/home/thanh/booking-sport/sportbook-admin/src/components/pages/user/UserInfo.js"],"names":["React","useState","useEffect","connect","useDispatch","makeStyles","Grid","Button","Row","Col","Paper","EditIcon","DateFnsUtils","BASE_URL","GET_ERRORS","CLEAR_ERRORS","BASE_IMAGE_URL","capitalizeSnakeCase","trimObjProperties","PageLoader","TextFieldInputWithHeader","ImageIcon","editUserInfo","getGithubProfile","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","info","fontSize","UserInfo","current_user","user","errors","location","classes","dispatch","loading","setLoading","formData","setformData","username","quote","firstName","lastName","email","phone","address","githubUsername","image","setImage","name","file","isEdit","setIsEdit","onChange","e","target","value","setInit","window","pathname","getGithubAvatar","JSON","stringify","id","onSubmit","formatData","error","Object","keys","map","key","trim","type","imageUrl","onCancel","join","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport { Row, Col } from \"reactstrap\";\nimport Paper from \"@material-ui/core/Paper\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nimport {\n  BASE_URL,\n  GET_ERRORS,\n  CLEAR_ERRORS,\n  BASE_IMAGE_URL,\n} from \"../../../store/actions/types\";\nimport {\n  capitalizeSnakeCase,\n  trimObjProperties,\n} from \"../../../utils/formatString\";\n\nimport PageLoader from \"../../custom/PageLoader\";\nimport TextFieldInputWithHeader from \"../../custom/TextFieldInputWithheader\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport { editUserInfo, getGithubProfile } from \"../../../store/actions/user\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  info: {\n    padding: theme.spacing(2),\n    // textAlign: \"\",\n    fontSize: \"16px\",\n    color: theme.palette.text.secondary,\n  },\n}));\nconst UserInfo = ({\n  current_user,\n  user,\n  errors,\n  location,\n  getGithubProfile,\n  editUserInfo,\n}) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const [loading, setLoading] = useState(false);\n  const [formData, setformData] = useState({\n    username: \"\",\n    quote: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\",\n    address: \"\",\n    githubUsername: \"\",\n  });\n\n  const [image, setImage] = useState({\n    name: \"\",\n    file: \"\",\n  });\n\n  const [isEdit, setIsEdit] = useState(false);\n  const {\n    username,\n    firstName,\n    quote,\n    lastName,\n    email,\n    phone,\n    address,\n    githubUsername,\n  } = formData;\n  // Save on change input value\n  const onChange = (e) => {\n    setformData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // const [selectedDate, setSelectedDate] = React.useState(\n  //   new Date(\"2014-08-18T21:11:54\")\n  // );\n\n  // const handleDateChange = (date) => {\n  //   setSelectedDate(date);\n  //   setformData({\n  //     ...formData,\n  //     dob: date,\n  //   });\n  // };\n\n  const setInit = () => {\n    if (window.location.pathname === \"/user-info\") {\n      setformData({\n        username: user.username || \"\",\n        firstName: user.firstName || \"\",\n        lastName: user.lastName || \"\",\n        quote: user.quote || \"\",\n        email: user.email || \"\",\n        phone: user.phone || \"\",\n        address: user.address || \"\",\n        githubUsername: user.githubUsername || \"\",\n      });\n    } else {\n      setformData({\n        username: current_user.username || \"\",\n        firstName: current_user.firstName || \"\",\n        lastName: current_user.lastName || \"\",\n        quote: current_user.quote || \"\",\n        email: current_user.email || \"\",\n        phone: current_user.phone || \"\",\n        address: current_user.address || \"\",\n        githubUsername: current_user.githubUsername || \"\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setInit();\n    getGithubAvatar();\n  }, []);\n\n  const getGithubAvatar = () => {\n    if (current_user && JSON.stringify(current_user) !== \"{}\") {\n      getGithubProfile(current_user.id, current_user.githubUsername);\n    } else {\n      getGithubProfile(user.id, user.githubUsername);\n    }\n  };\n  const onSubmit = () => {\n    const formatData = trimObjProperties(formData);\n\n    let error = {};\n    Object.keys(formatData).map((key) => {\n      if (formatData[key].trim() === \"\") {\n        error[key] = \"This field is required\";\n      }\n    });\n    dispatch({\n      type: GET_ERRORS,\n      errors: error,\n    });\n\n    if (JSON.stringify(error) === \"{}\") {\n      editUserInfo(setLoading, formatData);\n      getGithubAvatar();\n    }\n  };\n  useEffect(() => {\n    setInit();\n  }, []);\n\n  // useEffect(() => {\n  //   getGithubAvatar();\n  // }, [current_user && current_user.imageUrl]);\n\n  let imageUrl =\n    window.location.pathname === \"/user-info\"\n      ? user.imageUrl\n      : current_user.imageUrl;\n  if (!imageUrl) {\n    imageUrl = BASE_IMAGE_URL;\n  }\n\n  // const handleCapture = ({ target }) => {\n  //   const fileName = target.files[0].name;\n  //   setLoading(true);\n  //   editUserInfo(setLoading, {}, target.files[0]);\n  //   if (target.accept.includes(\"image\")) {\n  //     setImage({\n  //       name: fileName,\n  //       file: target.files[0],\n  //     });\n  //   }\n  // };\n\n  const onCancel = () => {\n    setIsEdit(false);\n    setInit();\n    dispatch({\n      type: CLEAR_ERRORS,\n    });\n  };\n\n  return (\n    <PageLoader loading={loading}>\n      <div className={classes.root}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => setIsEdit(true)}\n            >\n              <EditIcon className=\"mr-2\" /> Edit Info\n            </Button>\n          </Grid>\n          <Grid item xs={12}>\n            <Row>\n              <Col xs=\"6\">\n                {Object.keys(formData).map((key) => (\n                  <Paper className={[classes.info, \"mt-2\"].join(\" \")}>\n                    {isEdit ? (\n                      <TextFieldInputWithHeader\n                        id=\"outlined-multiline-flexible\"\n                        name={key}\n                        label={capitalizeSnakeCase(key)}\n                        fullWidth\n                        type=\"fullname\"\n                        value={formData[key]}\n                        onChange={onChange}\n                        error={errors[key]}\n                      />\n                    ) : (\n                      <>\n                        {capitalizeSnakeCase(key)}: {formData[key]}\n                      </>\n                    )}\n                  </Paper>\n                ))}\n                {isEdit && (\n                  <Col className=\"mt-4\">\n                    <Row className=\"justify-content-center\">\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className=\"mr-4\"\n                        onClick={onSubmit}\n                      >\n                        Save\n                      </Button>\n                      <Button variant=\"contained\" onClick={() => onCancel()}>\n                        Cancel\n                      </Button>\n                    </Row>\n                  </Col>\n                )}\n              </Col>\n              <Col xs=\"6\">\n                <Paper className={classes.paper}>\n                  <img\n                    src={imageUrl}\n                    alt=\"Girl in a jacket\"\n                    width=\"100%\"\n                    height={400}\n                  />\n                </Paper>\n                {/* <Row style={{ marginTop: '20px', justifyContent: 'center'}}>\n                  <Button\n                    variant=\"contained\"\n                    className=\"ml-3\"\n                    component=\"label\"\n                  >\n                    <ImageIcon className=\"mr-2\" /> Update avatar\n                    <input\n                      accept=\"image/*\"\n                      type=\"file\"\n                      onChange={handleCapture}\n                      style={{ display: \"none\" }}\n                    />\n                  </Button>\n                </Row> */}\n              </Col>\n            </Row>\n          </Grid>\n        </Grid>\n      </div>\n    </PageLoader>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  current_user: state.user.current_user,\n  user: state.auth.user,\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { getGithubProfile, editUserInfo })(\n  UserInfo\n);\n"]},"metadata":{},"sourceType":"module"}