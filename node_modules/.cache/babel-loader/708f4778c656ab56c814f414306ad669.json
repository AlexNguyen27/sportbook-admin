{"ast":null,"code":"export function truncateMultilineString(text, maxLength) {\n  if (!text) return \"\";\n  if (text.length <= maxLength) return text;\n  const descriptionArr = text.split(\" \");\n  const wordArr = [];\n  let resultString = \"\";\n\n  for (let i = 0; i < descriptionArr.length; i += 1) {\n    wordArr.push(`${descriptionArr[i]} `);\n    resultString += `${descriptionArr[i]} `;\n\n    if (resultString.length > maxLength) {\n      wordArr.pop(); // remove last element\n\n      break;\n    }\n  }\n\n  resultString = \"\";\n  wordArr.forEach(word => {\n    resultString += word;\n  });\n  return `${resultString.trim()}...`;\n}\nexport function capitalizeSnakeCase(text) {\n  return text.split(/(?=[A-Z])/).map(s => s.charAt(0).toUpperCase() + s.slice(1)).join(\" \");\n}\nexport function trimObjProperties(obj) {\n  return Object.keys(obj).reduce((acc, curr) => {\n    acc[curr] = obj[curr].trim();\n    return acc;\n  }, {});\n}","map":{"version":3,"sources":["/home/thanh/booking-sport/sportbook-admin/src/utils/formatString.js"],"names":["truncateMultilineString","text","maxLength","length","descriptionArr","split","wordArr","resultString","i","push","pop","forEach","word","trim","capitalizeSnakeCase","map","s","charAt","toUpperCase","slice","join","trimObjProperties","obj","Object","keys","reduce","acc","curr"],"mappings":"AAAA,OAAO,SAASA,uBAAT,CAAiCC,IAAjC,EAAuCC,SAAvC,EAAkD;AACvD,MAAI,CAACD,IAAL,EAAW,OAAO,EAAP;AACX,MAAIA,IAAI,CAACE,MAAL,IAAeD,SAAnB,EAA8B,OAAOD,IAAP;AAC9B,QAAMG,cAAc,GAAGH,IAAI,CAACI,KAAL,CAAW,GAAX,CAAvB;AACA,QAAMC,OAAO,GAAG,EAAhB;AAEA,MAAIC,YAAY,GAAG,EAAnB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,cAAc,CAACD,MAAnC,EAA2CK,CAAC,IAAI,CAAhD,EAAmD;AACjDF,IAAAA,OAAO,CAACG,IAAR,CAAc,GAAEL,cAAc,CAACI,CAAD,CAAI,GAAlC;AACAD,IAAAA,YAAY,IAAK,GAAEH,cAAc,CAACI,CAAD,CAAI,GAArC;;AACA,QAAID,YAAY,CAACJ,MAAb,GAAsBD,SAA1B,EAAqC;AACnCI,MAAAA,OAAO,CAACI,GAAR,GADmC,CACpB;;AACf;AACD;AACF;;AAEDH,EAAAA,YAAY,GAAG,EAAf;AACAD,EAAAA,OAAO,CAACK,OAAR,CAAiBC,IAAD,IAAU;AACxBL,IAAAA,YAAY,IAAIK,IAAhB;AACD,GAFD;AAIA,SAAQ,GAAEL,YAAY,CAACM,IAAb,EAAoB,KAA9B;AACD;AAED,OAAO,SAASC,mBAAT,CAA6Bb,IAA7B,EAAmC;AACxC,SAAOA,IAAI,CACRI,KADI,CACE,WADF,EAEJU,GAFI,CAECC,CAAD,IAAOA,CAAC,CAACC,MAAF,CAAS,CAAT,EAAYC,WAAZ,KAA4BF,CAAC,CAACG,KAAF,CAAQ,CAAR,CAFnC,EAGJC,IAHI,CAGC,GAHD,CAAP;AAID;AAED,OAAO,SAASC,iBAAT,CAA2BC,GAA3B,EAAgC;AACrC,SAAOC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,MAAjB,CAAwB,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC5CD,IAAAA,GAAG,CAACC,IAAD,CAAH,GAAYL,GAAG,CAACK,IAAD,CAAH,CAAUd,IAAV,EAAZ;AACA,WAAOa,GAAP;AACD,GAHM,EAGJ,EAHI,CAAP;AAID","sourcesContent":["export function truncateMultilineString(text, maxLength) {\n  if (!text) return \"\";\n  if (text.length <= maxLength) return text;\n  const descriptionArr = text.split(\" \");\n  const wordArr = [];\n\n  let resultString = \"\";\n  for (let i = 0; i < descriptionArr.length; i += 1) {\n    wordArr.push(`${descriptionArr[i]} `);\n    resultString += `${descriptionArr[i]} `;\n    if (resultString.length > maxLength) {\n      wordArr.pop(); // remove last element\n      break;\n    }\n  }\n\n  resultString = \"\";\n  wordArr.forEach((word) => {\n    resultString += word;\n  });\n\n  return `${resultString.trim()}...`;\n}\n\nexport function capitalizeSnakeCase(text) {\n  return text\n    .split(/(?=[A-Z])/)\n    .map((s) => s.charAt(0).toUpperCase() + s.slice(1))\n    .join(\" \");\n}\n\nexport function trimObjProperties(obj) {\n  return Object.keys(obj).reduce((acc, curr) => {\n    acc[curr] = obj[curr].trim()\n    return acc;\n  }, {});\n}\n"]},"metadata":{},"sourceType":"module"}