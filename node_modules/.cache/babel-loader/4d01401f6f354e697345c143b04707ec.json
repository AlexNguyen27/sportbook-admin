{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './store/reducers';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web and AsyncStorage for react-native\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: [\"errors\"]\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst initialState = {};\nconst middleware = [thunk];\nexport const store = createStore(persistedReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/home/thanh/booking-sport/sportbook-admin/src/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","rootReducer","persistStore","persistReducer","storage","persistConfig","key","blacklist","persistedReducer","initialState","middleware","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AAEA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAiD;;AAEjD,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBF,EAAAA,OAFoB;AAGpBG,EAAAA,SAAS,EAAE,CAAC,QAAD;AAHS,CAAtB;AAMA,MAAMC,gBAAgB,GAAGL,cAAc,CAACE,aAAD,EAAgBJ,WAAhB,CAAvC;AACA,MAAMQ,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACV,KAAD,CAAnB;AACA,OAAO,MAAMW,KAAK,GAAGd,WAAW,CAC9BW,gBAD8B,EAE9BC,YAF8B,EAG9BV,mBAAmB,CAACD,eAAe,CAAC,GAAGY,UAAJ,CAAhB,CAHW,CAAzB;AAMP,OAAO,MAAME,SAAS,GAAGV,YAAY,CAACS,KAAD,CAA9B","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './store/reducers';\n\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web and AsyncStorage for react-native\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: [\"errors\"]\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst initialState = {};\n\nconst middleware = [thunk];\nexport const store = createStore(\n  persistedReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport const persistor = persistStore(store);\n"]},"metadata":{},"sourceType":"module"}