{"ast":null,"code":"var _jsxFileName = \"/home/thanh/booking-sport/sportbook-admin/src/components/pages/userProfile/SubUserInfo.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport PageviewIcon from \"@material-ui/icons/Pageview\";\nimport { green, pink, grey } from \"@material-ui/core/colors\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Paper } from \"@material-ui/core\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport { albums } from \"../../../mockup/albums\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport CallIcon from \"@material-ui/icons/Call\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { Fragment } from \"react\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport { BASE_IMAGE_URL } from \"../../../store/actions/types\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 500,\n    height: 450\n  },\n  avatar: {\n    margin: \"0 auto\"\n  },\n  pink: {\n    color: theme.palette.getContrastText(pink[500]),\n    backgroundColor: pink[500],\n    margin: \"0 auto\"\n  },\n  green: {\n    color: \"#fff\",\n    backgroundColor: green[500],\n    margin: \"0 auto\"\n  },\n  gray: {\n    backgroundColor: \"#888\",\n    color: \"#fff\",\n    margin: \"0 auto\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    color: theme.palette.text.secondary\n  }\n}));\n\nconst SubUserInfo = ({\n  userInfo,\n  users,\n  connections\n}) => {\n  const classes = useStyles();\n  const {\n    username,\n    firstName,\n    lastName,\n    email,\n    phone,\n    address,\n    githubUsername,\n    quote,\n    posts,\n    followed\n  } = userInfo || {};\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"About Me\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EventIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Full name\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, firstName, \" \", lastName))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.pink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CallIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Phone\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, phone))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.green,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(HomeIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, address))), \" \", /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.gray,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GitHubIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"Github\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `https://github.com/${githubUsername}`,\n    className: \"aSubText\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, githubUsername))))), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    style: {\n      paddingBottom: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, \"My Albums (99)\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GridList, {\n    cellHeight: 160,\n    className: classes.gridList,\n    cols: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, albums.map(tile => /*#__PURE__*/React.createElement(GridListTile, {\n    key: tile.id,\n    cols: tile.cols || 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: tile.img,\n    alt: tile.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  })))))), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    bold: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, \"My Connection\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }), connections.map(item => /*#__PURE__*/React.createElement(Fragment, {\n    key: item.userId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    src: item.imageUrl || BASE_IMAGE_URL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, item.firstName, \" \", item.lastName), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `https://github.com/${item.githubUsername}`,\n    target: \"_blank\",\n    className: \"aSubText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 19\n    }\n  }, item.githubUsername)))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  })))));\n};\n\nconst mapStateToProps = state => ({\n  users: state.user.users\n});\n\nexport default connect(mapStateToProps, {})(SubUserInfo);","map":{"version":3,"sources":["/home/thanh/booking-sport/sportbook-admin/src/components/pages/userProfile/SubUserInfo.js"],"names":["React","connect","makeStyles","Avatar","FolderIcon","PageviewIcon","green","pink","grey","AssignmentIcon","Typography","Grid","Paper","GridList","GridListTile","albums","ImageIcon","EventIcon","CallIcon","HomeIcon","Fragment","GitHubIcon","BASE_IMAGE_URL","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","avatar","margin","color","getContrastText","gray","padding","spacing","marginBottom","text","secondary","SubUserInfo","userInfo","users","connections","classes","username","firstName","lastName","email","phone","address","githubUsername","quote","posts","followed","paddingBottom","map","tile","id","cols","img","title","item","userId","imageUrl","mapStateToProps","state","user"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport PageviewIcon from \"@material-ui/icons/Pageview\";\nimport { green, pink, grey } from \"@material-ui/core/colors\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Paper } from \"@material-ui/core\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport { albums } from \"../../../mockup/albums\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport CallIcon from \"@material-ui/icons/Call\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { Fragment } from \"react\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport { BASE_IMAGE_URL } from \"../../../store/actions/types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 500,\n    height: 450,\n  },\n  avatar: {\n    margin: \"0 auto\",\n  },\n  pink: {\n    color: theme.palette.getContrastText(pink[500]),\n    backgroundColor: pink[500],\n    margin: \"0 auto\",\n  },\n  green: {\n    color: \"#fff\",\n    backgroundColor: green[500],\n    margin: \"0 auto\",\n  },\n  gray: {\n    backgroundColor: \"#888\",\n    color: \"#fff\",\n    margin: \"0 auto\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst SubUserInfo = ({ userInfo, users, connections }) => {\n  const classes = useStyles();\n\n  const {\n    username,\n    firstName,\n    lastName,\n    email,\n    phone,\n    address,\n    githubUsername,\n    quote,\n    posts,\n    followed,\n  } = userInfo || {};\n\n  return (\n    <>\n      {/* ABOUT ME */}\n      <Paper className={classes.paper}>\n        <Typography variant=\"h5\" bold>\n          About Me\n        </Typography>\n        <hr></hr>\n        <Grid container>\n          <Grid item xs={2}>\n            <Avatar className={classes.avatar}>\n              <EventIcon />\n            </Avatar>\n          </Grid>\n          <Grid item xs={10}>\n            <Typography>Full name</Typography>\n            <Typography variant=\"caption\">\n              {firstName} {lastName}\n            </Typography>\n          </Grid>\n        </Grid>\n        <hr></hr>\n        <Grid container>\n          <Grid item xs={2}>\n            <Avatar className={classes.pink}>\n              <CallIcon />\n            </Avatar>\n          </Grid>\n          <Grid item xs={10}>\n            <Typography>Phone</Typography>\n            <Typography variant=\"caption\">{phone}</Typography>\n          </Grid>\n        </Grid>\n        <hr></hr>\n        <Grid container>\n          <Grid item xs={2}>\n            <Avatar className={classes.green}>\n              <HomeIcon />\n            </Avatar>\n          </Grid>\n          <Grid item xs={10}>\n            <Typography>Address</Typography>\n            <Typography variant=\"caption\">{address}</Typography>\n          </Grid>\n        </Grid>{\" \"}\n        <hr></hr>\n        <Grid container>\n          <Grid item xs={2}>\n            <Avatar className={classes.gray}>\n              <GitHubIcon />\n            </Avatar>\n          </Grid>\n          <Grid item xs={10}>\n            <Typography>Github</Typography>\n            <Typography variant=\"caption\">\n              <a\n                href={`https://github.com/${githubUsername}`}\n                className=\"aSubText\"\n                target=\"_blank\"\n              >\n                {githubUsername}\n              </a>\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n      {/* My albums */}\n      <Paper className={classes.paper}>\n        <Typography variant=\"h5\" style={{ paddingBottom: \"10px\" }}>\n          My Albums (99)\n        </Typography>\n        <div className={classes.root}>\n          <GridList cellHeight={160} className={classes.gridList} cols={3}>\n            {albums.map((tile) => (\n              <GridListTile key={tile.id} cols={tile.cols || 1}>\n                <img src={tile.img} alt={tile.title} />\n              </GridListTile>\n            ))}\n          </GridList>\n        </div>\n      </Paper>\n      {/* MY CONNECTION */}\n      <Paper className={classes.paper}>\n        <Typography variant=\"h5\" bold>\n          My Connection\n        </Typography>\n        <hr></hr>\n        {connections.map((item) => (\n          <Fragment key={item.userId}>\n            <Grid container>\n              <Grid item xs={2}>\n                <Avatar className={classes.avatar} src={item.imageUrl || BASE_IMAGE_URL}/>\n              </Grid>\n              <Grid item xs={10}>\n                <Typography>\n                  {item.firstName} {item.lastName}\n                </Typography>\n                <Typography variant=\"caption\">\n                  <a\n                    href={`https://github.com/${item.githubUsername}`}\n                    target=\"_blank\"\n                    className=\"aSubText\"\n                  >\n                    {item.githubUsername}\n                  </a>\n                </Typography>\n              </Grid>\n            </Grid>\n            <hr></hr>\n          </Fragment>\n        ))}\n      </Paper>\n    </>\n  );\n};\nconst mapStateToProps = (state) => ({\n  users: state.user.users,\n});\nexport default connect(mapStateToProps, {})(SubUserInfo);\n"]},"metadata":{},"sourceType":"module"}