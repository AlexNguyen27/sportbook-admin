{"ast":null,"code":"var _jsxFileName = \"/home/thanh/booking-sport/sportbook-admin/src/components/pages/report/ReportsList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATE_TIME, REPORT_STATUS_OBJECT } from \"../../../utils/common\";\nimport { forwardRef } from \"react\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport ChromeReaderModeIcon from \"@material-ui/icons/ChromeReaderMode\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport PageLoader from \"../../custom/PageLoader\";\nimport Swal from \"sweetalert2\";\nimport { getReports, deleteReport } from \"../../../store/actions/report\";\nimport EditReportModal from \"./component/EditReportModal\";\nimport ViewReport from \"./component/ViewReport\";\nimport Colors from \"../../../constants/Colors\";\nconst tableIcons = {\n  Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 35\n    }\n  }))),\n  Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 37\n    }\n  }))),\n  Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }\n  }))),\n  // Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }))),\n  // Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 38\n    }\n  }))),\n  Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 38\n    }\n  }))),\n  FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 41\n    }\n  }))),\n  LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 40\n    }\n  }))),\n  NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 40\n    }\n  }))),\n  PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }))),\n  ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 43\n    }\n  }))),\n  Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 38\n    }\n  }))),\n  SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowDownward, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 41\n    }\n  }))),\n  ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 47\n    }\n  }))),\n  ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 42\n    }\n  })))\n};\n\nconst ReportsList = ({\n  getReports,\n  deleteReport,\n  reports,\n  users\n}) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [state, setState] = useState({\n    columns: [{\n      title: \"Post\",\n      field: \"title\",\n      editable: \"never\"\n    }, {\n      title: \"Author\",\n      field: \"username\",\n      editable: \"never\"\n    }, {\n      title: \"Reason\",\n      field: \"reason\",\n      editable: \"never\"\n    }, {\n      title: \"Status\",\n      field: \"status\",\n      lookup: REPORT_STATUS_OBJECT\n    }, // { title: \"Total Reporters\", field: \"totalReporters\", editable: \"never\" },\n    {\n      title: \"Created at\",\n      field: \"createdAt\",\n      editable: \"never\"\n    }, {\n      title: \"Updated at\",\n      field: \"updatedAt\",\n      editable: \"never\"\n    }],\n    data: [{\n      title: \"Weather\",\n      username: \"thanh\",\n      reason: \"Violent\",\n      status: \"waiting_for_approve\",\n      totalReporters: 10,\n      createdAt: moment(\"2020-05-29T14:49:05.661Z\").format(DATE_TIME),\n      updatedAt: moment(\"2020-05-29T14:49:05.661Z\").format(DATE_TIME)\n    }]\n  });\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getReports(setLoading);\n  }, [loading]);\n\n  const getDateTime = date => moment(date).format(DATE_TIME);\n\n  const formatedData = (reports || []).map(report => {\n    const {\n      title,\n      userId,\n      id: postId\n    } = report.post || {};\n    return { ...report,\n      title,\n      username: users[userId].username,\n      totalReporters: reports.filter(report => report.postId === postId).length,\n      createdAt: getDateTime(report.createdAt),\n      updatedAt: getDateTime(report.updatedAt)\n    };\n  });\n  const [modalEdit, setModalEdit] = useState(false);\n  const [modalViewReport, setModalViewReport] = useState(false);\n  const [reportData, setReportData] = useState();\n\n  const onEditReport = report => {\n    setModalEdit(true);\n    setReportData(report);\n  };\n\n  const onViewReport = report => {\n    setModalViewReport(true);\n    setReportData(report);\n  };\n\n  return /*#__PURE__*/React.createElement(PageLoader, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: `100%`,\n      overflowX: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    icons: tableIcons,\n    title: \"List Of Reports\",\n    columns: state.columns,\n    data: formatedData || [],\n    options: {\n      pageSize: 8,\n      headerStyle: {\n        fontWeight: \"bold\"\n      },\n      rowStyle: {\n        overflowX: \"auto\"\n      }\n    },\n    actions: [{\n      icon: () => /*#__PURE__*/React.createElement(Visibility, {\n        style: {\n          color: Colors.view\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 27\n        }\n      }),\n      tooltip: \"View Report\",\n      onClick: (event, rowData) => {\n        onViewReport(rowData);\n      }\n    }, {\n      icon: () => /*#__PURE__*/React.createElement(Edit, {\n        style: {\n          color: Colors.orange\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 27\n        }\n      }),\n      tooltip: \"Edit Reported Post\",\n      onClick: (event, rowData) => {\n        onEditReport(rowData);\n      }\n    }, {\n      icon: () => /*#__PURE__*/React.createElement(Delete, {\n        style: {\n          color: Colors.red\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 27\n        }\n      }),\n      tooltip: \"Delete Report\",\n      onClick: (event, rowData) => {\n        Swal.fire({\n          title: `Are you sure to delete ?`,\n          text: \"You won't be able to revert this!\",\n          type: \"warning\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: \"Yes, delete it!\"\n        }).then(result => {\n          if (result.value) {\n            setLoading(true);\n            const {\n              reportedBy,\n              postId\n            } = rowData;\n            deleteReport(setLoading, reportedBy, postId);\n          }\n        });\n      }\n    }, {\n      icon: () => /*#__PURE__*/React.createElement(ChromeReaderModeIcon, {\n        style: {\n          color: Colors.comment\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 27\n        }\n      }),\n      tooltip: \"View reported post\",\n      onClick: (event, rowData) => {\n        history.push(`view-post/${rowData.postId}`);\n      }\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(EditReportModal, {\n    setModal: setModalEdit,\n    modal: modalEdit,\n    reportData: reportData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ViewReport, {\n    setModal: setModalViewReport,\n    modal: modalViewReport,\n    reportData: reportData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  users: state.user.users,\n  reports: state.report.reports\n});\n\nexport default connect(mapStateToProps, {\n  getReports,\n  deleteReport\n})(withRouter(ReportsList));","map":{"version":3,"sources":["/home/thanh/booking-sport/sportbook-admin/src/components/pages/report/ReportsList.js"],"names":["React","useEffect","useState","MaterialTable","useHistory","moment","connect","useDispatch","withRouter","DATE_TIME","REPORT_STATUS_OBJECT","forwardRef","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","ChromeReaderModeIcon","Delete","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","Visibility","PageLoader","Swal","getReports","deleteReport","EditReportModal","ViewReport","Colors","tableIcons","Add","props","ref","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","ReportsList","reports","users","dispatch","history","state","setState","columns","title","field","editable","lookup","data","username","reason","status","totalReporters","createdAt","format","updatedAt","loading","setLoading","getDateTime","date","formatedData","map","report","userId","id","postId","post","filter","length","modalEdit","setModalEdit","modalViewReport","setModalViewReport","reportData","setReportData","onEditReport","onViewReport","maxWidth","overflowX","pageSize","headerStyle","fontWeight","rowStyle","icon","color","view","tooltip","onClick","event","rowData","orange","red","fire","text","type","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","reportedBy","comment","push","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATE_TIME, REPORT_STATUS_OBJECT } from \"../../../utils/common\";\n\nimport { forwardRef } from \"react\";\n\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport ChromeReaderModeIcon from \"@material-ui/icons/ChromeReaderMode\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport Visibility from \"@material-ui/icons/Visibility\";\n\nimport PageLoader from \"../../custom/PageLoader\";\nimport Swal from \"sweetalert2\";\nimport { getReports, deleteReport } from \"../../../store/actions/report\";\nimport EditReportModal from \"./component/EditReportModal\";\nimport ViewReport from \"./component/ViewReport\";\nimport Colors from \"../../../constants/Colors\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  // Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  // Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst ReportsList = ({ getReports, deleteReport, reports, users }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [state, setState] = useState({\n    columns: [\n      { title: \"Post\", field: \"title\", editable: \"never\" },\n      { title: \"Author\", field: \"username\", editable: \"never\" },\n      { title: \"Reason\", field: \"reason\", editable: \"never\" },\n      { title: \"Status\", field: \"status\", lookup: REPORT_STATUS_OBJECT },\n      // { title: \"Total Reporters\", field: \"totalReporters\", editable: \"never\" },\n      {\n        title: \"Created at\",\n        field: \"createdAt\",\n        editable: \"never\",\n      },\n      {\n        title: \"Updated at\",\n        field: \"updatedAt\",\n        editable: \"never\",\n      },\n    ],\n    data: [\n      {\n        title: \"Weather\",\n        username: \"thanh\",\n        reason: \"Violent\",\n        status: \"waiting_for_approve\",\n        totalReporters: 10,\n        createdAt: moment(\"2020-05-29T14:49:05.661Z\").format(DATE_TIME),\n        updatedAt: moment(\"2020-05-29T14:49:05.661Z\").format(DATE_TIME),\n      },\n    ],\n  });\n\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getReports(setLoading);\n  }, [loading]);\n\n  const getDateTime = (date) => moment(date).format(DATE_TIME);\n\n  const formatedData = (reports || []).map((report) => {\n    const { title, userId, id: postId } = report.post || {};\n    return {\n      ...report,\n      title,\n      username: users[userId].username,\n      totalReporters: reports.filter((report) => report.postId === postId)\n        .length,\n      createdAt: getDateTime(report.createdAt),\n      updatedAt: getDateTime(report.updatedAt),\n    };\n  });\n\n  const [modalEdit, setModalEdit] = useState(false);\n  const [modalViewReport, setModalViewReport] = useState(false);\n  const [reportData, setReportData] = useState();\n\n  const onEditReport = (report) => {\n    setModalEdit(true);\n    setReportData(report);\n  };\n\n  const onViewReport = (report) => {\n    setModalViewReport(true);\n    setReportData(report);\n  };\n\n  return (\n    <PageLoader loading={loading}>\n      <div style={{ maxWidth: `100%`, overflowX: \"auto\" }}>\n        <MaterialTable\n          icons={tableIcons}\n          title=\"List Of Reports\"\n          columns={state.columns}\n          data={formatedData || []}\n          options={{\n            pageSize: 8,\n            headerStyle: {\n              fontWeight: \"bold\",\n            },\n            rowStyle: {\n              overflowX: \"auto\",\n            },\n          }}\n          actions={[\n            {\n              icon: () => <Visibility style={{ color: Colors.view }}/>,\n              tooltip: \"View Report\",\n              onClick: (event, rowData) => {\n                onViewReport(rowData);\n              },\n            },\n            {\n              icon: () => <Edit style={{ color: Colors.orange }}/>,\n              tooltip: \"Edit Reported Post\",\n              onClick: (event, rowData) => {\n                onEditReport(rowData);\n              },\n            },\n            {\n              icon: () => <Delete style={{ color: Colors.red }}/>,\n              tooltip: \"Delete Report\",\n              onClick: (event, rowData) => {\n                Swal.fire({\n                  title: `Are you sure to delete ?`,\n                  text: \"You won't be able to revert this!\",\n                  type: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, delete it!\",\n                }).then((result) => {\n                  if (result.value) {\n                    setLoading(true);\n                    const { reportedBy, postId } = rowData;\n                    deleteReport(setLoading, reportedBy, postId);\n                  }\n                });\n              },\n            },\n            {\n              icon: () => <ChromeReaderModeIcon style={{ color: Colors.comment }}/>,\n              tooltip: \"View reported post\",\n              onClick: (event, rowData) => {\n                history.push(`view-post/${rowData.postId}`);\n              },\n            },\n          ]}\n        />\n      </div>\n      <EditReportModal\n        setModal={setModalEdit}\n        modal={modalEdit}\n        reportData={reportData}\n      />\n      <ViewReport\n        setModal={setModalViewReport}\n        modal={modalViewReport}\n        reportData={reportData}\n      />\n    </PageLoader>\n  );\n};\nconst mapStateToProps = (state) => ({\n  users: state.user.users,\n  reports: state.report.reports,\n});\nexport default connect(mapStateToProps, { getReports, deleteReport })(\n  withRouter(ReportsList)\n);\n"]},"metadata":{},"sourceType":"module"}