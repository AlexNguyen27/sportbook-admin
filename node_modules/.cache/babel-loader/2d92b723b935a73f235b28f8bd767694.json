{"ast":null,"code":"import logoutDispatch from \"../../utils/logoutDispatch\";\nimport { GET_ERRORS, CLEAR_ERRORS, BASE_URL, FOLLOW_UNFOLLOW } from \"./types\";\nimport { hera } from \"hera-js\"; // token provided => get fromUserId\n\nexport const followToUser = (toUserId, setConnect) => async (dispatch, getState) => {\n  const {\n    token,\n    user: {\n      id: fromUserId\n    }\n  } = getState().auth;\n  const {\n    data,\n    errors\n  } = await hera({\n    options: {\n      url: BASE_URL,\n      headers: {\n        token,\n        \"Content-Type\": \"application/json\"\n      }\n    },\n    query: `\n        mutation {\n            createFollower(toUserId: $toUserId) {\n                status \n                message\n              }\n        }\n      `,\n    variables: {\n      toUserId\n    }\n  });\n\n  if (!errors) {\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n\n    if (data.createFollower.message.includes(\"Unfollow\")) {\n      setConnect(false);\n      dispatch({\n        type: FOLLOW_UNFOLLOW,\n        isFollow: false,\n        toUserId\n      });\n    } else {\n      setConnect(true);\n      const newFollowed = {\n        toUserId,\n        fromUserId\n      };\n      dispatch({\n        type: FOLLOW_UNFOLLOW,\n        isFollow: true,\n        newFollowed\n      });\n    }\n  } else {\n    console.log(errors);\n    logoutDispatch(dispatch, errors);\n    dispatch({\n      type: GET_ERRORS,\n      errors: errors[0].message\n    });\n  }\n};","map":{"version":3,"sources":["/home/thanh/booking-sport/sportbook-admin/src/store/actions/follow.js"],"names":["logoutDispatch","GET_ERRORS","CLEAR_ERRORS","BASE_URL","FOLLOW_UNFOLLOW","hera","followToUser","toUserId","setConnect","dispatch","getState","token","user","id","fromUserId","auth","data","errors","options","url","headers","query","variables","type","createFollower","message","includes","isFollow","newFollowed","console","log"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,4BAA3B;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,QAAnC,EAA6CC,eAA7C,QAAoE,SAApE;AACA,SAASC,IAAT,QAAqB,SAArB,C,CAEA;;AACA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,UAAX,KAA0B,OACpDC,QADoD,EAEpDC,QAFoD,KAGjD;AACH,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,EAAE,EAAEC;AAAN;AAFF,MAGFJ,QAAQ,GAAGK,IAHf;AAKA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmB,MAAMZ,IAAI,CAAC;AAClCa,IAAAA,OAAO,EAAE;AACPC,MAAAA,GAAG,EAAEhB,QADE;AAEPiB,MAAAA,OAAO,EAAE;AACPT,QAAAA,KADO;AAEP,wBAAgB;AAFT;AAFF,KADyB;AAQlCU,IAAAA,KAAK,EAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,OAfsC;AAgBlCC,IAAAA,SAAS,EAAE;AACTf,MAAAA;AADS;AAhBuB,GAAD,CAAnC;;AAqBA,MAAI,CAACU,MAAL,EAAa;AACXR,IAAAA,QAAQ,CAAC;AACPc,MAAAA,IAAI,EAAErB;AADC,KAAD,CAAR;;AAIA,QAAIc,IAAI,CAACQ,cAAL,CAAoBC,OAApB,CAA4BC,QAA5B,CAAqC,UAArC,CAAJ,EAAsD;AACpDlB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAC,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAEnB,eADC;AAEPuB,QAAAA,QAAQ,EAAE,KAFH;AAGPpB,QAAAA;AAHO,OAAD,CAAR;AAKD,KAPD,MAOO;AACLC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMoB,WAAW,GAAG;AAClBrB,QAAAA,QADkB;AAElBO,QAAAA;AAFkB,OAApB;AAIAL,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAEnB,eADC;AAEPuB,QAAAA,QAAQ,EAAE,IAFH;AAGPC,QAAAA;AAHO,OAAD,CAAR;AAKD;AACF,GAxBD,MAwBO;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ;AACAjB,IAAAA,cAAc,CAACS,QAAD,EAAWQ,MAAX,CAAd;AACAR,IAAAA,QAAQ,CAAC;AACPc,MAAAA,IAAI,EAAEtB,UADC;AAEPgB,MAAAA,MAAM,EAAEA,MAAM,CAAC,CAAD,CAAN,CAAUQ;AAFX,KAAD,CAAR;AAID;AACF,CA9DM","sourcesContent":["import logoutDispatch from \"../../utils/logoutDispatch\";\nimport { GET_ERRORS, CLEAR_ERRORS, BASE_URL, FOLLOW_UNFOLLOW } from \"./types\";\nimport { hera } from \"hera-js\";\n\n// token provided => get fromUserId\nexport const followToUser = (toUserId, setConnect) => async (\n  dispatch,\n  getState\n) => {\n  const {\n    token,\n    user: { id: fromUserId },\n  } = getState().auth;\n\n  const { data, errors } = await hera({\n    options: {\n      url: BASE_URL,\n      headers: {\n        token,\n        \"Content-Type\": \"application/json\",\n      },\n    },\n    query: `\n        mutation {\n            createFollower(toUserId: $toUserId) {\n                status \n                message\n              }\n        }\n      `,\n    variables: {\n      toUserId,\n    },\n  });\n\n  if (!errors) {\n    dispatch({\n      type: CLEAR_ERRORS,\n    });\n\n    if (data.createFollower.message.includes(\"Unfollow\")) {\n      setConnect(false);\n      dispatch({\n        type: FOLLOW_UNFOLLOW,\n        isFollow: false,\n        toUserId\n      });\n    } else {\n      setConnect(true);\n      const newFollowed = {\n        toUserId,\n        fromUserId,\n      };\n      dispatch({\n        type: FOLLOW_UNFOLLOW,\n        isFollow: true,\n        newFollowed,\n      });\n    }\n  } else {\n    console.log(errors);\n    logoutDispatch(dispatch, errors);\n    dispatch({\n      type: GET_ERRORS,\n      errors: errors[0].message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}