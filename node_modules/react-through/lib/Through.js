'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MAX_DATA_NUM = 1000000;

var Through = (_temp = _class = function (_React$Component) {
  _inherits(Through, _React$Component);

  function Through(props, context) {
    _classCallCheck(this, Through);

    var _this = _possibleConstructorReturn(this, (Through.__proto__ || Object.getPrototypeOf(Through)).call(this, props, context));

    _this.doUpdate = function (data, syncUpdate) {
      _this.data = data;
      ++_this.dataNum;
      if (!_this.timer && _this.dataNum > MAX_DATA_NUM) {
        _this.dataNum = 0;
      }

      if (syncUpdate) {
        if (_this.canSetState) {
          _this.setState({ dataNum: _this.dataNum });
        }
        return;
      }

      if (!_this.timer) {
        _this.timer = setTimeout(function () {
          if (_this.canSetState) {
            _this.setState({ dataNum: _this.dataNum });
          }
          _this.timer = undefined;
        }, 0);
      }
    };

    _this.state = {
      dataNum: MAX_DATA_NUM
    };
    _this.dataNum = MAX_DATA_NUM;
    _this.data = {};
    _this.timer = undefined;
    _this.mounted = false;
    _this.canSetState = false;
    return _this;
  }

  _createClass(Through, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.updateArea(this.props.area);
      this.canSetState = true;
      if (this.state.dataNum != this.dataNum) {
        this.doUpdate(this.data, true);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.updateArea(undefined);
      this.canSetState = false;
    }
  }, {
    key: 'updateArea',
    value: function updateArea(area) {
      if (this.unsubscribe) this.unsubscribe();
      if (area) this.unsubscribe = this.context.through.subscribe(area, this.doUpdate);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          direct = _props.direct,
          bearingKey = _props.bearingKey,
          defval = _props.default,
          defaultValue = _props.defaultValue,
          _props$map = _props.map,
          map = _props$map === undefined ? function (a) {
        return a;
      } : _props$map;


      var key = bearingKey ? bearingKey : direct === true ? 'default' : direct;

      var data = key ? this.data[key] : this.data;

      return this.props.children(data ? map(data) : defaultValue || defval);
    }
  }]);

  return Through;
}(_react2.default.Component), _class.contextTypes = {
  through: _propTypes2.default.object
}, _class.propTypes = {
  area: _propTypes2.default.string.isRequired,
  direct: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.bool]),
  bearingKey: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.bool]),
  default: _propTypes2.default.any,
  defaultValue: _propTypes2.default.any,
  map: _propTypes2.default.func
}, _temp);
exports.default = Through;