'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var throughAgent = function throughAgent(area, key) {
  return function (AgentComponent) {
    var _class, _temp;

    var getKey = null;

    if (!(typeof area === 'string' || area instanceof String)) {
      throw new Error("type error: throughAgent(area:string, key:string|function)");
    }

    if (typeof key === 'string' || key instanceof String) {
      getKey = function getKey(props) {
        return props[key];
      };
    } else if (typeof key === 'function') {
      getKey = key;
    } else if (key === undefined || key === null) {
      getKey = function getKey(props) {
        return 'default';
      };
    } else {
      throw new Error("type error: throughAgent(area:string, key:string|function)");
    }

    var ThroughAgent = (_temp = _class = function (_React$Component) {
      _inherits(ThroughAgent, _React$Component);

      function ThroughAgent(props, context) {
        _classCallCheck(this, ThroughAgent);

        var _this = _possibleConstructorReturn(this, (ThroughAgent.__proto__ || Object.getPrototypeOf(ThroughAgent)).call(this, props, context));

        _this.componentWillUnmount = function () {
          _this.update({});
        };

        _this.item = function (elem) {
          var syncUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

          var key = elem && getKey(elem.props);
          var data = !elem || !key ? {} : _defineProperty({}, key, elem.props);
          _this.update(data, syncUpdate);
        };

        _this.items = function (elem) {
          var syncUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

          var data = {};
          _react2.default.Children.forEach(elem.props.children, function (elem) {
            var key = elem && getKey(elem.props);
            if (!elem || !key) {
              return;
            }
            data[key] = elem.props;
          });
          _this.update(data, syncUpdate);
        };

        _this.update = function (data, syncUpdate) {
          var add = Object.keys(data).filter(function (key) {
            return !Object.prototype.hasOwnProperty.call(_this.data, key);
          });
          var remove = Object.keys(_this.data).filter(function (key) {
            return !Object.prototype.hasOwnProperty.call(data, key);
          });
          remove.forEach(function (key) {
            return _this.context.through.remove(area, key);
          });
          add.forEach(function (key) {
            return _this.context.through.add(area, key);
          });
          Object.keys(data).forEach(function (key) {
            return _this.context.through.update(area, key, data[key], syncUpdate);
          });
          _this.data = data;
        };

        _this.data = {};
        _this.update(_this.data);
        return _this;
      }

      _createClass(ThroughAgent, [{
        key: 'render',
        value: function render() {
          var item = this.item,
              items = this.items;

          var through = Object.assign({ item: item, items: items }, this.props.through);
          return _react2.default.createElement(AgentComponent, _extends({}, this.props, _defineProperty({}, area, { item: item, items: items })));
        }
      }]);

      return ThroughAgent;
    }(_react2.default.Component), _class.contextTypes = {
      through: _propTypes2.default.object
    }, _temp);

    return ThroughAgent;
  };
};

exports.default = throughAgent;